
node2_lab6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a6  00800200  0000103a  000010ce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000103a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  008002a6  008002a6  00001174  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001174  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000011d0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  00001210  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001a1b  00000000  00000000  00001360  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001295  00000000  00000000  00002d7b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b4b  00000000  00000000  00004010  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002f4  00000000  00000000  00004b5c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007c1  00000000  00000000  00004e50  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000800  00000000  00000000  00005611  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  00005e11  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
       6:	00 00       	nop
       8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
       a:	00 00       	nop
       c:	1f c1       	rjmp	.+574    	; 0x24c <__vector_3>
       e:	00 00       	nop
      10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
      12:	00 00       	nop
      14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
      16:	00 00       	nop
      18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
      1e:	00 00       	nop
      20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
      22:	00 00       	nop
      24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
      26:	00 00       	nop
      28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
      2e:	00 00       	nop
      30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
      32:	00 00       	nop
      34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
      36:	00 00       	nop
      38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
      3e:	00 00       	nop
      40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
      42:	00 00       	nop
      44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
      46:	00 00       	nop
      48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
      4e:	00 00       	nop
      50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
      52:	00 00       	nop
      54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
      56:	00 00       	nop
      58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
      5e:	00 00       	nop
      60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
      62:	00 00       	nop
      64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
      66:	00 00       	nop
      68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
      6e:	00 00       	nop
      70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
      72:	00 00       	nop
      74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
      76:	00 00       	nop
      78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
      7e:	00 00       	nop
      80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
      82:	00 00       	nop
      84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
      86:	00 00       	nop
      88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
      8e:	00 00       	nop
      90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
      92:	00 00       	nop
      94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
      96:	00 00       	nop
      98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
      be:	00 00       	nop
      c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
      da:	00 00       	nop
      dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
      de:	00 00       	nop
      e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	ea e3       	ldi	r30, 0x3A	; 58
      fc:	f0 e1       	ldi	r31, 0x10	; 16
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a6 3a       	cpi	r26, 0xA6	; 166
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2
     110:	a6 ea       	ldi	r26, 0xA6	; 166
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a0 3b       	cpi	r26, 0xB0	; 176
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	a8 d1       	rcall	.+848    	; 0x470 <main>
     120:	8a c7       	rjmp	.+3860   	; 0x1036 <_exit>

00000122 <__bad_interrupt>:
     122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <CAN_init>:
		MCP_write(i, msgPtr->data[dataIterator]);
		dataIterator++;
	}
	MCP_requestToSend(0);
	// Transmission of CAN msg will start when the device detects that the bus is available...
}
     124:	cf 93       	push	r28
     126:	c8 2f       	mov	r28, r24
     128:	fc d0       	rcall	.+504    	; 0x322 <MCP_init>
     12a:	65 e0       	ldi	r22, 0x05	; 5
     12c:	8b e2       	ldi	r24, 0x2B	; 43
     12e:	07 d1       	rcall	.+526    	; 0x33e <MCP_write>
     130:	45 e8       	ldi	r20, 0x85	; 133
     132:	65 e0       	ldi	r22, 0x05	; 5
     134:	8b e2       	ldi	r24, 0x2B	; 43
     136:	12 d1       	rcall	.+548    	; 0x35c <MCP_bitModify>
     138:	8b e2       	ldi	r24, 0x2B	; 43
     13a:	f6 d0       	rcall	.+492    	; 0x328 <MCP_read>
     13c:	1f 92       	push	r1
     13e:	8f 93       	push	r24
     140:	86 e0       	ldi	r24, 0x06	; 6
     142:	92 e0       	ldi	r25, 0x02	; 2
     144:	9f 93       	push	r25
     146:	8f 93       	push	r24
     148:	74 d3       	rcall	.+1768   	; 0x832 <printf>
     14a:	4c 2f       	mov	r20, r28
     14c:	60 ee       	ldi	r22, 0xE0	; 224
     14e:	8f e0       	ldi	r24, 0x0F	; 15
     150:	05 d1       	rcall	.+522    	; 0x35c <MCP_bitModify>
     152:	40 e6       	ldi	r20, 0x60	; 96
     154:	60 e6       	ldi	r22, 0x60	; 96
     156:	80 e6       	ldi	r24, 0x60	; 96
     158:	01 d1       	rcall	.+514    	; 0x35c <MCP_bitModify>
     15a:	8f e0       	ldi	r24, 0x0F	; 15
     15c:	e5 d0       	rcall	.+458    	; 0x328 <MCP_read>
     15e:	0f 90       	pop	r0
     160:	0f 90       	pop	r0
     162:	0f 90       	pop	r0
     164:	0f 90       	pop	r0
     166:	86 ff       	sbrs	r24, 6
     168:	07 c0       	rjmp	.+14     	; 0x178 <CAN_init+0x54>
     16a:	82 e2       	ldi	r24, 0x22	; 34
     16c:	92 e0       	ldi	r25, 0x02	; 2
     16e:	9f 93       	push	r25
     170:	8f 93       	push	r24
     172:	5f d3       	rcall	.+1726   	; 0x832 <printf>
     174:	0f 90       	pop	r0
     176:	0f 90       	pop	r0
     178:	cf 91       	pop	r28
     17a:	08 95       	ret

0000017c <CAN_message_recieve>:

msg_t CAN_message_recieve(void) {
     17c:	7f 92       	push	r7
     17e:	8f 92       	push	r8
     180:	9f 92       	push	r9
     182:	af 92       	push	r10
     184:	bf 92       	push	r11
     186:	cf 92       	push	r12
     188:	df 92       	push	r13
     18a:	ef 92       	push	r14
     18c:	ff 92       	push	r15
     18e:	0f 93       	push	r16
     190:	1f 93       	push	r17
     192:	cf 93       	push	r28
     194:	df 93       	push	r29
     196:	cd b7       	in	r28, 0x3d	; 61
     198:	de b7       	in	r29, 0x3e	; 62
     19a:	2a 97       	sbiw	r28, 0x0a	; 10
     19c:	0f b6       	in	r0, 0x3f	; 63
     19e:	f8 94       	cli
     1a0:	de bf       	out	0x3e, r29	; 62
     1a2:	0f be       	out	0x3f, r0	; 63
     1a4:	cd bf       	out	0x3d, r28	; 61
     1a6:	5c 01       	movw	r10, r24
	msg_t msg;
	
	// Read ID from RXB0SIDH and RXB0SIDL
	uint8_t upperId = MCP_read(MCP_RXB0CTRL + 1);
     1a8:	81 e6       	ldi	r24, 0x61	; 97
     1aa:	be d0       	rcall	.+380    	; 0x328 <MCP_read>
     1ac:	78 2e       	mov	r7, r24
	
	msg.id = upperId ;
	
	// Read length from RXB0DLC
	msg.length = MCP_read(MCP_RXB0CTRL + 5);
     1ae:	85 e6       	ldi	r24, 0x65	; 101
     1b0:	bb d0       	rcall	.+374    	; 0x328 <MCP_read>
     1b2:	08 2f       	mov	r16, r24
	
	// Read data
	int dataIterator = 0;
	for (uint8_t i = MCP_RXB0CTRL + 6; i <= MCP_RXB0CTRL + 6 + msg.length; i++) {
     1b4:	c8 2e       	mov	r12, r24
     1b6:	d1 2c       	mov	r13, r1
     1b8:	26 e6       	ldi	r18, 0x66	; 102
     1ba:	c2 0e       	add	r12, r18
     1bc:	d1 1c       	adc	r13, r1
     1be:	36 e6       	ldi	r19, 0x66	; 102
     1c0:	c3 16       	cp	r12, r19
     1c2:	d1 04       	cpc	r13, r1
     1c4:	c4 f0       	brlt	.+48     	; 0x1f6 <CAN_message_recieve+0x7a>
     1c6:	7e 01       	movw	r14, r28
     1c8:	83 e0       	ldi	r24, 0x03	; 3
     1ca:	e8 0e       	add	r14, r24
     1cc:	f1 1c       	adc	r15, r1
     1ce:	16 e6       	ldi	r17, 0x66	; 102
     1d0:	ce 01       	movw	r24, r28
     1d2:	80 95       	com	r24
     1d4:	90 95       	com	r25
     1d6:	fc 01       	movw	r30, r24
     1d8:	ec 59       	subi	r30, 0x9C	; 156
     1da:	ff 4f       	sbci	r31, 0xFF	; 255
		msg.data[dataIterator] = MCP_read(i);
     1dc:	4f 01       	movw	r8, r30
     1de:	81 2f       	mov	r24, r17
     1e0:	a3 d0       	rcall	.+326    	; 0x328 <MCP_read>
     1e2:	f7 01       	movw	r30, r14
     1e4:	81 93       	st	Z+, r24
     1e6:	7f 01       	movw	r14, r30
	// Read length from RXB0DLC
	msg.length = MCP_read(MCP_RXB0CTRL + 5);
	
	// Read data
	int dataIterator = 0;
	for (uint8_t i = MCP_RXB0CTRL + 6; i <= MCP_RXB0CTRL + 6 + msg.length; i++) {
     1e8:	1f 5f       	subi	r17, 0xFF	; 255
     1ea:	c4 01       	movw	r24, r8
     1ec:	8e 0f       	add	r24, r30
     1ee:	9f 1f       	adc	r25, r31
     1f0:	c8 16       	cp	r12, r24
     1f2:	d9 06       	cpc	r13, r25
     1f4:	a4 f7       	brge	.-24     	; 0x1de <CAN_message_recieve+0x62>
		msg.data[dataIterator] = MCP_read(i);
		dataIterator++;
	}
	return msg;
     1f6:	79 82       	std	Y+1, r7	; 0x01
     1f8:	0a 83       	std	Y+2, r16	; 0x02
     1fa:	8a e0       	ldi	r24, 0x0A	; 10
     1fc:	fe 01       	movw	r30, r28
     1fe:	31 96       	adiw	r30, 0x01	; 1
     200:	d5 01       	movw	r26, r10
     202:	01 90       	ld	r0, Z+
     204:	0d 92       	st	X+, r0
     206:	8a 95       	dec	r24
     208:	e1 f7       	brne	.-8      	; 0x202 <CAN_message_recieve+0x86>
} 
     20a:	c5 01       	movw	r24, r10
     20c:	2a 96       	adiw	r28, 0x0a	; 10
     20e:	0f b6       	in	r0, 0x3f	; 63
     210:	f8 94       	cli
     212:	de bf       	out	0x3e, r29	; 62
     214:	0f be       	out	0x3f, r0	; 63
     216:	cd bf       	out	0x3d, r28	; 61
     218:	df 91       	pop	r29
     21a:	cf 91       	pop	r28
     21c:	1f 91       	pop	r17
     21e:	0f 91       	pop	r16
     220:	ff 90       	pop	r15
     222:	ef 90       	pop	r14
     224:	df 90       	pop	r13
     226:	cf 90       	pop	r12
     228:	bf 90       	pop	r11
     22a:	af 90       	pop	r10
     22c:	9f 90       	pop	r9
     22e:	8f 90       	pop	r8
     230:	7f 90       	pop	r7
     232:	08 95       	ret

00000234 <INTERRUPT_init>:
volatile int ADC_INTERRUPT_READY = 0;
//volatile int SPI_TRANSMISSION_COMPLETE = 0;

void INTERRUPT_init() {
	// disable global interrupts (set SREG register)
	cli();
     234:	f8 94       	cli
	
	// The falling edge of INT2 generates an interrupt request
	EICRA &= ~(1 << ISC20);
     236:	e9 e6       	ldi	r30, 0x69	; 105
     238:	f0 e0       	ldi	r31, 0x00	; 0
     23a:	80 81       	ld	r24, Z
     23c:	8f 7e       	andi	r24, 0xEF	; 239
     23e:	80 83       	st	Z, r24
	EICRA |= (1 << ISC21); 
     240:	80 81       	ld	r24, Z
     242:	80 62       	ori	r24, 0x20	; 32
     244:	80 83       	st	Z, r24
	
	// Enable interrupt on INT2
	EIMSK |= (1 << INT2);
     246:	ea 9a       	sbi	0x1d, 2	; 29
		
	// Enable global interrupts (set SREG register)
	sei();
     248:	78 94       	sei
     24a:	08 95       	ret

0000024c <__vector_3>:
}


// CAN interrupts
ISR(INT2_vect) {
     24c:	1f 92       	push	r1
     24e:	0f 92       	push	r0
     250:	0f b6       	in	r0, 0x3f	; 63
     252:	0f 92       	push	r0
     254:	11 24       	eor	r1, r1
     256:	0b b6       	in	r0, 0x3b	; 59
     258:	0f 92       	push	r0
     25a:	2f 93       	push	r18
     25c:	3f 93       	push	r19
     25e:	4f 93       	push	r20
     260:	5f 93       	push	r21
     262:	6f 93       	push	r22
     264:	7f 93       	push	r23
     266:	8f 93       	push	r24
     268:	9f 93       	push	r25
     26a:	af 93       	push	r26
     26c:	bf 93       	push	r27
     26e:	ef 93       	push	r30
     270:	ff 93       	push	r31
     272:	cf 93       	push	r28
     274:	df 93       	push	r29
     276:	cd b7       	in	r28, 0x3d	; 61
     278:	de b7       	in	r29, 0x3e	; 62
     27a:	2a 97       	sbiw	r28, 0x0a	; 10
     27c:	de bf       	out	0x3e, r29	; 62
     27e:	cd bf       	out	0x3d, r28	; 61
	if (MCP_read(MCP_CANINTF) & MCP_TX0IF) {
     280:	8c e2       	ldi	r24, 0x2C	; 44
     282:	52 d0       	rcall	.+164    	; 0x328 <MCP_read>
     284:	82 ff       	sbrs	r24, 2
     286:	04 c0       	rjmp	.+8      	; 0x290 <__vector_3+0x44>
		//printf("Message sendt succesfully\n\r");
		
		// Reset transmit flag
		MCP_bitModify(MCP_CANINTF, MCP_TX0IF, 0);
     288:	40 e0       	ldi	r20, 0x00	; 0
     28a:	64 e0       	ldi	r22, 0x04	; 4
     28c:	8c e2       	ldi	r24, 0x2C	; 44
     28e:	66 d0       	rcall	.+204    	; 0x35c <MCP_bitModify>
	}
	// Message recieved at recieve buffer 0
	if (MCP_read(MCP_CANINTF) & MCP_RX0IF) {
     290:	8c e2       	ldi	r24, 0x2C	; 44
     292:	4a d0       	rcall	.+148    	; 0x328 <MCP_read>
     294:	80 ff       	sbrs	r24, 0
     296:	23 c0       	rjmp	.+70     	; 0x2de <__vector_3+0x92>
		struct CAN_message msg = CAN_message_recieve();
     298:	ce 01       	movw	r24, r28
     29a:	01 96       	adiw	r24, 0x01	; 1
     29c:	6f df       	rcall	.-290    	; 0x17c <CAN_message_recieve>
     29e:	99 81       	ldd	r25, Y+1	; 0x01
     2a0:	8b 81       	ldd	r24, Y+3	; 0x03
     2a2:	91 30       	cpi	r25, 0x01	; 1
		//printf("Message recieved with ID: %#X\n\r", msg.id);
		if (msg.id == JOYSTICK_DIR_ID) {
     2a4:	61 f4       	brne	.+24     	; 0x2be <__vector_3+0x72>
     2a6:	1f 92       	push	r1
			printf("JOYSTICK: %d\n\r", msg.data[0]);
     2a8:	8f 93       	push	r24
     2aa:	84 e4       	ldi	r24, 0x44	; 68
     2ac:	92 e0       	ldi	r25, 0x02	; 2
     2ae:	9f 93       	push	r25
     2b0:	8f 93       	push	r24
     2b2:	bf d2       	rcall	.+1406   	; 0x832 <printf>
     2b4:	0f 90       	pop	r0
     2b6:	0f 90       	pop	r0
     2b8:	0f 90       	pop	r0
     2ba:	0f 90       	pop	r0
     2bc:	0c c0       	rjmp	.+24     	; 0x2d6 <__vector_3+0x8a>
		}
		else if (msg.id == JOYSTICK_POS_ID){
     2be:	92 30       	cpi	r25, 0x02	; 2
     2c0:	19 f4       	brne	.+6      	; 0x2c8 <__vector_3+0x7c>
			//printf("Joystick x pos = %d\n\r", msg.data[0]);
			PWM_set_duty_cycle(msg.data[0]);
     2c2:	90 e0       	ldi	r25, 0x00	; 0
     2c4:	71 d0       	rcall	.+226    	; 0x3a8 <PWM_set_duty_cycle>
     2c6:	07 c0       	rjmp	.+14     	; 0x2d6 <__vector_3+0x8a>
		}
		else {
			printf("CANNOT IDENTIFY MESSAGE");
     2c8:	83 e5       	ldi	r24, 0x53	; 83
     2ca:	92 e0       	ldi	r25, 0x02	; 2
     2cc:	9f 93       	push	r25
     2ce:	8f 93       	push	r24
     2d0:	b0 d2       	rcall	.+1376   	; 0x832 <printf>
     2d2:	0f 90       	pop	r0
		}
	
		// Reset recieve flag
		MCP_bitModify(MCP_CANINTF, MCP_RX0IF, 0);
     2d4:	0f 90       	pop	r0
     2d6:	40 e0       	ldi	r20, 0x00	; 0
     2d8:	61 e0       	ldi	r22, 0x01	; 1
     2da:	8c e2       	ldi	r24, 0x2C	; 44
     2dc:	3f d0       	rcall	.+126    	; 0x35c <MCP_bitModify>
	}
	if (MCP_read(MCP_CANINTF) & MCP_MERRF) {
     2de:	8c e2       	ldi	r24, 0x2C	; 44
     2e0:	23 d0       	rcall	.+70     	; 0x328 <MCP_read>
     2e2:	2a 96       	adiw	r28, 0x0a	; 10
		//printf("CAN BUS ERROR!");
	}
}
     2e4:	0f b6       	in	r0, 0x3f	; 63
     2e6:	f8 94       	cli
     2e8:	de bf       	out	0x3e, r29	; 62
     2ea:	0f be       	out	0x3f, r0	; 63
     2ec:	cd bf       	out	0x3d, r28	; 61
     2ee:	df 91       	pop	r29
     2f0:	cf 91       	pop	r28
     2f2:	ff 91       	pop	r31
     2f4:	ef 91       	pop	r30
     2f6:	bf 91       	pop	r27
     2f8:	af 91       	pop	r26
     2fa:	9f 91       	pop	r25
     2fc:	8f 91       	pop	r24
     2fe:	7f 91       	pop	r23
     300:	6f 91       	pop	r22
     302:	5f 91       	pop	r21
     304:	4f 91       	pop	r20
     306:	3f 91       	pop	r19
     308:	2f 91       	pop	r18
     30a:	0f 90       	pop	r0
     30c:	0b be       	out	0x3b, r0	; 59
     30e:	0f 90       	pop	r0
     310:	0f be       	out	0x3f, r0	; 63
     312:	0f 90       	pop	r0
     314:	1f 90       	pop	r1
     316:	18 95       	reti

00000318 <MCP_reset>:
     318:	2f 98       	cbi	0x05, 7	; 5
     31a:	80 ec       	ldi	r24, 0xC0	; 192
     31c:	7d d0       	rcall	.+250    	; 0x418 <SPI_transmit>
     31e:	2f 9a       	sbi	0x05, 7	; 5
     320:	08 95       	ret

00000322 <MCP_init>:
     322:	66 d0       	rcall	.+204    	; 0x3f0 <SPI_MasterInit>
     324:	f9 cf       	rjmp	.-14     	; 0x318 <MCP_reset>
     326:	08 95       	ret

00000328 <MCP_read>:
     328:	cf 93       	push	r28
     32a:	c8 2f       	mov	r28, r24
     32c:	2f 98       	cbi	0x05, 7	; 5
     32e:	83 e0       	ldi	r24, 0x03	; 3
     330:	73 d0       	rcall	.+230    	; 0x418 <SPI_transmit>
     332:	8c 2f       	mov	r24, r28
     334:	71 d0       	rcall	.+226    	; 0x418 <SPI_transmit>
     336:	75 d0       	rcall	.+234    	; 0x422 <SPI_read>
     338:	2f 9a       	sbi	0x05, 7	; 5
     33a:	cf 91       	pop	r28
     33c:	08 95       	ret

0000033e <MCP_write>:
     33e:	cf 93       	push	r28
     340:	df 93       	push	r29
     342:	d8 2f       	mov	r29, r24
     344:	c6 2f       	mov	r28, r22
     346:	2f 98       	cbi	0x05, 7	; 5
     348:	82 e0       	ldi	r24, 0x02	; 2
     34a:	66 d0       	rcall	.+204    	; 0x418 <SPI_transmit>
     34c:	8d 2f       	mov	r24, r29
     34e:	64 d0       	rcall	.+200    	; 0x418 <SPI_transmit>
     350:	8c 2f       	mov	r24, r28
     352:	62 d0       	rcall	.+196    	; 0x418 <SPI_transmit>
     354:	2f 9a       	sbi	0x05, 7	; 5
     356:	df 91       	pop	r29
     358:	cf 91       	pop	r28
     35a:	08 95       	ret

0000035c <MCP_bitModify>:
     35c:	1f 93       	push	r17
     35e:	cf 93       	push	r28
     360:	df 93       	push	r29
     362:	18 2f       	mov	r17, r24
     364:	d6 2f       	mov	r29, r22
     366:	c4 2f       	mov	r28, r20
     368:	2f 98       	cbi	0x05, 7	; 5
     36a:	85 e0       	ldi	r24, 0x05	; 5
     36c:	55 d0       	rcall	.+170    	; 0x418 <SPI_transmit>
     36e:	81 2f       	mov	r24, r17
     370:	53 d0       	rcall	.+166    	; 0x418 <SPI_transmit>
     372:	8d 2f       	mov	r24, r29
     374:	51 d0       	rcall	.+162    	; 0x418 <SPI_transmit>
     376:	8c 2f       	mov	r24, r28
     378:	4f d0       	rcall	.+158    	; 0x418 <SPI_transmit>
     37a:	2f 9a       	sbi	0x05, 7	; 5
     37c:	df 91       	pop	r29
     37e:	cf 91       	pop	r28
     380:	1f 91       	pop	r17
     382:	08 95       	ret

00000384 <PWM_init>:

#include <avr/io.h>

void PWM_init(void) {
	// Set PB5 as output for PWM signal
	DDRB |= (1 << PB6);
     384:	26 9a       	sbi	0x04, 6	; 4

	// Set polarity (non inverting) and lower bits for mode 14 (fast PWM)
	TCCR1A |= (1 << COM1B1) | (1 << WGM11);
     386:	e0 e8       	ldi	r30, 0x80	; 128
     388:	f0 e0       	ldi	r31, 0x00	; 0
     38a:	80 81       	ld	r24, Z
     38c:	82 62       	ori	r24, 0x22	; 34
     38e:	80 83       	st	Z, r24

	// Set upper bits for mode 14 and set prescaler f_osc/8
	TCCR1B |= (1 << WGM13) | (1 << WGM12) | (1 << CS11);
     390:	e1 e8       	ldi	r30, 0x81	; 129
     392:	f0 e0       	ldi	r31, 0x00	; 0
     394:	80 81       	ld	r24, Z
     396:	8a 61       	ori	r24, 0x1A	; 26
     398:	80 83       	st	Z, r24
	
	// Set input capture register 5 to 40 000 (this should create a compare match every 20 ms)
	ICR1 = 0x9C40;
     39a:	80 e4       	ldi	r24, 0x40	; 64
     39c:	9c e9       	ldi	r25, 0x9C	; 156
     39e:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x700087>
     3a2:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x700086>
     3a6:	08 95       	ret

000003a8 <PWM_set_duty_cycle>:
}

// duty cycle = {0, 100}
void PWM_set_duty_cycle(unsigned int duty_cycle)  {
	if (duty_cycle < 100) {
     3a8:	84 36       	cpi	r24, 0x64	; 100
     3aa:	91 05       	cpc	r25, r1
     3ac:	c8 f4       	brcc	.+50     	; 0x3e0 <PWM_set_duty_cycle+0x38>
		uint16_t d = (duty_cycle*0.012 + 0.9)*2000;
     3ae:	bc 01       	movw	r22, r24
     3b0:	80 e0       	ldi	r24, 0x00	; 0
     3b2:	90 e0       	ldi	r25, 0x00	; 0
     3b4:	03 d1       	rcall	.+518    	; 0x5bc <__floatunsisf>
     3b6:	26 ea       	ldi	r18, 0xA6	; 166
     3b8:	3b e9       	ldi	r19, 0x9B	; 155
     3ba:	44 e4       	ldi	r20, 0x44	; 68
     3bc:	5c e3       	ldi	r21, 0x3C	; 60
     3be:	8c d1       	rcall	.+792    	; 0x6d8 <__mulsf3>
     3c0:	26 e6       	ldi	r18, 0x66	; 102
     3c2:	36 e6       	ldi	r19, 0x66	; 102
     3c4:	46 e6       	ldi	r20, 0x66	; 102
     3c6:	5f e3       	ldi	r21, 0x3F	; 63
     3c8:	69 d0       	rcall	.+210    	; 0x49c <__addsf3>
     3ca:	20 e0       	ldi	r18, 0x00	; 0
     3cc:	30 e0       	ldi	r19, 0x00	; 0
     3ce:	4a ef       	ldi	r20, 0xFA	; 250
     3d0:	54 e4       	ldi	r21, 0x44	; 68
     3d2:	82 d1       	rcall	.+772    	; 0x6d8 <__mulsf3>
     3d4:	c7 d0       	rcall	.+398    	; 0x564 <__fixunssfsi>

		// New duty cycle is automatically set at new period (BOTTOM)
		OCR1B = d;
     3d6:	70 93 8b 00 	sts	0x008B, r23	; 0x80008b <__TEXT_REGION_LENGTH__+0x70008b>
     3da:	60 93 8a 00 	sts	0x008A, r22	; 0x80008a <__TEXT_REGION_LENGTH__+0x70008a>
	} else {
		printf("Error: PWM duty cycle is too large\n\r");
     3de:	08 95       	ret
     3e0:	8b e6       	ldi	r24, 0x6B	; 107
     3e2:	92 e0       	ldi	r25, 0x02	; 2
     3e4:	9f 93       	push	r25
     3e6:	8f 93       	push	r24
     3e8:	24 d2       	rcall	.+1096   	; 0x832 <printf>
     3ea:	0f 90       	pop	r0
     3ec:	0f 90       	pop	r0
     3ee:	08 95       	ret

000003f0 <SPI_MasterInit>:
     3f0:	84 b1       	in	r24, 0x04	; 4
     3f2:	87 68       	ori	r24, 0x87	; 135
     3f4:	84 b9       	out	0x04, r24	; 4
     3f6:	23 98       	cbi	0x04, 3	; 4
     3f8:	8c b5       	in	r24, 0x2c	; 44
     3fa:	80 65       	ori	r24, 0x50	; 80
     3fc:	8c bd       	out	0x2c, r24	; 44
     3fe:	8c b5       	in	r24, 0x2c	; 44
     400:	8f 7d       	andi	r24, 0xDF	; 223
     402:	8c bd       	out	0x2c, r24	; 44
     404:	8c b5       	in	r24, 0x2c	; 44
     406:	87 7f       	andi	r24, 0xF7	; 247
     408:	8c bd       	out	0x2c, r24	; 44
     40a:	8c b5       	in	r24, 0x2c	; 44
     40c:	8b 7f       	andi	r24, 0xFB	; 251
     40e:	8c bd       	out	0x2c, r24	; 44
     410:	8c b5       	in	r24, 0x2c	; 44
     412:	81 60       	ori	r24, 0x01	; 1
     414:	8c bd       	out	0x2c, r24	; 44
     416:	08 95       	ret

00000418 <SPI_transmit>:
     418:	8e bd       	out	0x2e, r24	; 46
     41a:	0d b4       	in	r0, 0x2d	; 45
     41c:	07 fe       	sbrs	r0, 7
     41e:	fd cf       	rjmp	.-6      	; 0x41a <SPI_transmit+0x2>
     420:	08 95       	ret

00000422 <SPI_read>:
     422:	8f ef       	ldi	r24, 0xFF	; 255
     424:	8e bd       	out	0x2e, r24	; 46
     426:	0d b4       	in	r0, 0x2d	; 45
     428:	07 fe       	sbrs	r0, 7
     42a:	fd cf       	rjmp	.-6      	; 0x426 <SPI_read+0x4>
     42c:	8e b5       	in	r24, 0x2e	; 46
     42e:	08 95       	ret

00000430 <UART_transmit>:
     430:	e0 ec       	ldi	r30, 0xC0	; 192
     432:	f0 e0       	ldi	r31, 0x00	; 0
     434:	90 81       	ld	r25, Z
     436:	95 ff       	sbrs	r25, 5
     438:	fd cf       	rjmp	.-6      	; 0x434 <UART_transmit+0x4>
     43a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     43e:	08 95       	ret

00000440 <UART_receive>:
     440:	e0 ec       	ldi	r30, 0xC0	; 192
     442:	f0 e0       	ldi	r31, 0x00	; 0
     444:	80 81       	ld	r24, Z
     446:	88 23       	and	r24, r24
     448:	ec f7       	brge	.-6      	; 0x444 <UART_receive+0x4>
     44a:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     44e:	08 95       	ret

00000450 <UART_init>:
     450:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
     454:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
     458:	88 e1       	ldi	r24, 0x18	; 24
     45a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
     45e:	8e e0       	ldi	r24, 0x0E	; 14
     460:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
     464:	60 e2       	ldi	r22, 0x20	; 32
     466:	72 e0       	ldi	r23, 0x02	; 2
     468:	88 e1       	ldi	r24, 0x18	; 24
     46a:	92 e0       	ldi	r25, 0x02	; 2
     46c:	98 c1       	rjmp	.+816    	; 0x79e <fdevopen>
     46e:	08 95       	ret

00000470 <main>:
#define MYUBRR 103

int main(void)
{
	
	UART_init(MYUBRR);
     470:	87 e6       	ldi	r24, 0x67	; 103
     472:	90 e0       	ldi	r25, 0x00	; 0
     474:	ed df       	rcall	.-38     	; 0x450 <UART_init>
	printf("Node 2 starting...\n\r");
     476:	80 e9       	ldi	r24, 0x90	; 144
     478:	92 e0       	ldi	r25, 0x02	; 2
     47a:	9f 93       	push	r25
     47c:	8f 93       	push	r24
	INTERRUPT_init();
     47e:	d9 d1       	rcall	.+946    	; 0x832 <printf>
	CAN_init(MODE_NORMAL);
     480:	d9 de       	rcall	.-590    	; 0x234 <INTERRUPT_init>
     482:	80 e0       	ldi	r24, 0x00	; 0
     484:	4f de       	rcall	.-866    	; 0x124 <CAN_init>
	PWM_init();
     486:	7e df       	rcall	.-260    	; 0x384 <PWM_init>
     488:	0f 90       	pop	r0
     48a:	0f 90       	pop	r0
     48c:	8f e9       	ldi	r24, 0x9F	; 159
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     48e:	9f e0       	ldi	r25, 0x0F	; 15
     490:	01 97       	sbiw	r24, 0x01	; 1
     492:	f1 f7       	brne	.-4      	; 0x490 <main+0x20>
     494:	00 c0       	rjmp	.+0      	; 0x496 <main+0x26>
     496:	00 00       	nop
     498:	f9 cf       	rjmp	.-14     	; 0x48c <main+0x1c>

0000049a <__subsf3>:
     49a:	50 58       	subi	r21, 0x80	; 128

0000049c <__addsf3>:
     49c:	bb 27       	eor	r27, r27
     49e:	aa 27       	eor	r26, r26
     4a0:	0e d0       	rcall	.+28     	; 0x4be <__addsf3x>
     4a2:	e0 c0       	rjmp	.+448    	; 0x664 <__fp_round>
     4a4:	d1 d0       	rcall	.+418    	; 0x648 <__fp_pscA>
     4a6:	30 f0       	brcs	.+12     	; 0x4b4 <__addsf3+0x18>
     4a8:	d6 d0       	rcall	.+428    	; 0x656 <__fp_pscB>
     4aa:	20 f0       	brcs	.+8      	; 0x4b4 <__addsf3+0x18>
     4ac:	31 f4       	brne	.+12     	; 0x4ba <__addsf3+0x1e>
     4ae:	9f 3f       	cpi	r25, 0xFF	; 255
     4b0:	11 f4       	brne	.+4      	; 0x4b6 <__addsf3+0x1a>
     4b2:	1e f4       	brtc	.+6      	; 0x4ba <__addsf3+0x1e>
     4b4:	c6 c0       	rjmp	.+396    	; 0x642 <__fp_nan>
     4b6:	0e f4       	brtc	.+2      	; 0x4ba <__addsf3+0x1e>
     4b8:	e0 95       	com	r30
     4ba:	e7 fb       	bst	r30, 7
     4bc:	bc c0       	rjmp	.+376    	; 0x636 <__fp_inf>

000004be <__addsf3x>:
     4be:	e9 2f       	mov	r30, r25
     4c0:	e2 d0       	rcall	.+452    	; 0x686 <__fp_split3>
     4c2:	80 f3       	brcs	.-32     	; 0x4a4 <__addsf3+0x8>
     4c4:	ba 17       	cp	r27, r26
     4c6:	62 07       	cpc	r22, r18
     4c8:	73 07       	cpc	r23, r19
     4ca:	84 07       	cpc	r24, r20
     4cc:	95 07       	cpc	r25, r21
     4ce:	18 f0       	brcs	.+6      	; 0x4d6 <__addsf3x+0x18>
     4d0:	71 f4       	brne	.+28     	; 0x4ee <__addsf3x+0x30>
     4d2:	9e f5       	brtc	.+102    	; 0x53a <__addsf3x+0x7c>
     4d4:	fa c0       	rjmp	.+500    	; 0x6ca <__fp_zero>
     4d6:	0e f4       	brtc	.+2      	; 0x4da <__addsf3x+0x1c>
     4d8:	e0 95       	com	r30
     4da:	0b 2e       	mov	r0, r27
     4dc:	ba 2f       	mov	r27, r26
     4de:	a0 2d       	mov	r26, r0
     4e0:	0b 01       	movw	r0, r22
     4e2:	b9 01       	movw	r22, r18
     4e4:	90 01       	movw	r18, r0
     4e6:	0c 01       	movw	r0, r24
     4e8:	ca 01       	movw	r24, r20
     4ea:	a0 01       	movw	r20, r0
     4ec:	11 24       	eor	r1, r1
     4ee:	ff 27       	eor	r31, r31
     4f0:	59 1b       	sub	r21, r25
     4f2:	99 f0       	breq	.+38     	; 0x51a <__addsf3x+0x5c>
     4f4:	59 3f       	cpi	r21, 0xF9	; 249
     4f6:	50 f4       	brcc	.+20     	; 0x50c <__addsf3x+0x4e>
     4f8:	50 3e       	cpi	r21, 0xE0	; 224
     4fa:	68 f1       	brcs	.+90     	; 0x556 <__addsf3x+0x98>
     4fc:	1a 16       	cp	r1, r26
     4fe:	f0 40       	sbci	r31, 0x00	; 0
     500:	a2 2f       	mov	r26, r18
     502:	23 2f       	mov	r18, r19
     504:	34 2f       	mov	r19, r20
     506:	44 27       	eor	r20, r20
     508:	58 5f       	subi	r21, 0xF8	; 248
     50a:	f3 cf       	rjmp	.-26     	; 0x4f2 <__addsf3x+0x34>
     50c:	46 95       	lsr	r20
     50e:	37 95       	ror	r19
     510:	27 95       	ror	r18
     512:	a7 95       	ror	r26
     514:	f0 40       	sbci	r31, 0x00	; 0
     516:	53 95       	inc	r21
     518:	c9 f7       	brne	.-14     	; 0x50c <__addsf3x+0x4e>
     51a:	7e f4       	brtc	.+30     	; 0x53a <__addsf3x+0x7c>
     51c:	1f 16       	cp	r1, r31
     51e:	ba 0b       	sbc	r27, r26
     520:	62 0b       	sbc	r22, r18
     522:	73 0b       	sbc	r23, r19
     524:	84 0b       	sbc	r24, r20
     526:	ba f0       	brmi	.+46     	; 0x556 <__addsf3x+0x98>
     528:	91 50       	subi	r25, 0x01	; 1
     52a:	a1 f0       	breq	.+40     	; 0x554 <__addsf3x+0x96>
     52c:	ff 0f       	add	r31, r31
     52e:	bb 1f       	adc	r27, r27
     530:	66 1f       	adc	r22, r22
     532:	77 1f       	adc	r23, r23
     534:	88 1f       	adc	r24, r24
     536:	c2 f7       	brpl	.-16     	; 0x528 <__addsf3x+0x6a>
     538:	0e c0       	rjmp	.+28     	; 0x556 <__addsf3x+0x98>
     53a:	ba 0f       	add	r27, r26
     53c:	62 1f       	adc	r22, r18
     53e:	73 1f       	adc	r23, r19
     540:	84 1f       	adc	r24, r20
     542:	48 f4       	brcc	.+18     	; 0x556 <__addsf3x+0x98>
     544:	87 95       	ror	r24
     546:	77 95       	ror	r23
     548:	67 95       	ror	r22
     54a:	b7 95       	ror	r27
     54c:	f7 95       	ror	r31
     54e:	9e 3f       	cpi	r25, 0xFE	; 254
     550:	08 f0       	brcs	.+2      	; 0x554 <__addsf3x+0x96>
     552:	b3 cf       	rjmp	.-154    	; 0x4ba <__addsf3+0x1e>
     554:	93 95       	inc	r25
     556:	88 0f       	add	r24, r24
     558:	08 f0       	brcs	.+2      	; 0x55c <__addsf3x+0x9e>
     55a:	99 27       	eor	r25, r25
     55c:	ee 0f       	add	r30, r30
     55e:	97 95       	ror	r25
     560:	87 95       	ror	r24
     562:	08 95       	ret

00000564 <__fixunssfsi>:
     564:	98 d0       	rcall	.+304    	; 0x696 <__fp_splitA>
     566:	88 f0       	brcs	.+34     	; 0x58a <__fixunssfsi+0x26>
     568:	9f 57       	subi	r25, 0x7F	; 127
     56a:	90 f0       	brcs	.+36     	; 0x590 <__fixunssfsi+0x2c>
     56c:	b9 2f       	mov	r27, r25
     56e:	99 27       	eor	r25, r25
     570:	b7 51       	subi	r27, 0x17	; 23
     572:	a0 f0       	brcs	.+40     	; 0x59c <__fixunssfsi+0x38>
     574:	d1 f0       	breq	.+52     	; 0x5aa <__fixunssfsi+0x46>
     576:	66 0f       	add	r22, r22
     578:	77 1f       	adc	r23, r23
     57a:	88 1f       	adc	r24, r24
     57c:	99 1f       	adc	r25, r25
     57e:	1a f0       	brmi	.+6      	; 0x586 <__fixunssfsi+0x22>
     580:	ba 95       	dec	r27
     582:	c9 f7       	brne	.-14     	; 0x576 <__fixunssfsi+0x12>
     584:	12 c0       	rjmp	.+36     	; 0x5aa <__fixunssfsi+0x46>
     586:	b1 30       	cpi	r27, 0x01	; 1
     588:	81 f0       	breq	.+32     	; 0x5aa <__fixunssfsi+0x46>
     58a:	9f d0       	rcall	.+318    	; 0x6ca <__fp_zero>
     58c:	b1 e0       	ldi	r27, 0x01	; 1
     58e:	08 95       	ret
     590:	9c c0       	rjmp	.+312    	; 0x6ca <__fp_zero>
     592:	67 2f       	mov	r22, r23
     594:	78 2f       	mov	r23, r24
     596:	88 27       	eor	r24, r24
     598:	b8 5f       	subi	r27, 0xF8	; 248
     59a:	39 f0       	breq	.+14     	; 0x5aa <__fixunssfsi+0x46>
     59c:	b9 3f       	cpi	r27, 0xF9	; 249
     59e:	cc f3       	brlt	.-14     	; 0x592 <__fixunssfsi+0x2e>
     5a0:	86 95       	lsr	r24
     5a2:	77 95       	ror	r23
     5a4:	67 95       	ror	r22
     5a6:	b3 95       	inc	r27
     5a8:	d9 f7       	brne	.-10     	; 0x5a0 <__fixunssfsi+0x3c>
     5aa:	3e f4       	brtc	.+14     	; 0x5ba <__fixunssfsi+0x56>
     5ac:	90 95       	com	r25
     5ae:	80 95       	com	r24
     5b0:	70 95       	com	r23
     5b2:	61 95       	neg	r22
     5b4:	7f 4f       	sbci	r23, 0xFF	; 255
     5b6:	8f 4f       	sbci	r24, 0xFF	; 255
     5b8:	9f 4f       	sbci	r25, 0xFF	; 255
     5ba:	08 95       	ret

000005bc <__floatunsisf>:
     5bc:	e8 94       	clt
     5be:	09 c0       	rjmp	.+18     	; 0x5d2 <__floatsisf+0x12>

000005c0 <__floatsisf>:
     5c0:	97 fb       	bst	r25, 7
     5c2:	3e f4       	brtc	.+14     	; 0x5d2 <__floatsisf+0x12>
     5c4:	90 95       	com	r25
     5c6:	80 95       	com	r24
     5c8:	70 95       	com	r23
     5ca:	61 95       	neg	r22
     5cc:	7f 4f       	sbci	r23, 0xFF	; 255
     5ce:	8f 4f       	sbci	r24, 0xFF	; 255
     5d0:	9f 4f       	sbci	r25, 0xFF	; 255
     5d2:	99 23       	and	r25, r25
     5d4:	a9 f0       	breq	.+42     	; 0x600 <__floatsisf+0x40>
     5d6:	f9 2f       	mov	r31, r25
     5d8:	96 e9       	ldi	r25, 0x96	; 150
     5da:	bb 27       	eor	r27, r27
     5dc:	93 95       	inc	r25
     5de:	f6 95       	lsr	r31
     5e0:	87 95       	ror	r24
     5e2:	77 95       	ror	r23
     5e4:	67 95       	ror	r22
     5e6:	b7 95       	ror	r27
     5e8:	f1 11       	cpse	r31, r1
     5ea:	f8 cf       	rjmp	.-16     	; 0x5dc <__floatsisf+0x1c>
     5ec:	fa f4       	brpl	.+62     	; 0x62c <__floatsisf+0x6c>
     5ee:	bb 0f       	add	r27, r27
     5f0:	11 f4       	brne	.+4      	; 0x5f6 <__floatsisf+0x36>
     5f2:	60 ff       	sbrs	r22, 0
     5f4:	1b c0       	rjmp	.+54     	; 0x62c <__floatsisf+0x6c>
     5f6:	6f 5f       	subi	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	8f 4f       	sbci	r24, 0xFF	; 255
     5fc:	9f 4f       	sbci	r25, 0xFF	; 255
     5fe:	16 c0       	rjmp	.+44     	; 0x62c <__floatsisf+0x6c>
     600:	88 23       	and	r24, r24
     602:	11 f0       	breq	.+4      	; 0x608 <__floatsisf+0x48>
     604:	96 e9       	ldi	r25, 0x96	; 150
     606:	11 c0       	rjmp	.+34     	; 0x62a <__floatsisf+0x6a>
     608:	77 23       	and	r23, r23
     60a:	21 f0       	breq	.+8      	; 0x614 <__floatsisf+0x54>
     60c:	9e e8       	ldi	r25, 0x8E	; 142
     60e:	87 2f       	mov	r24, r23
     610:	76 2f       	mov	r23, r22
     612:	05 c0       	rjmp	.+10     	; 0x61e <__floatsisf+0x5e>
     614:	66 23       	and	r22, r22
     616:	71 f0       	breq	.+28     	; 0x634 <__floatsisf+0x74>
     618:	96 e8       	ldi	r25, 0x86	; 134
     61a:	86 2f       	mov	r24, r22
     61c:	70 e0       	ldi	r23, 0x00	; 0
     61e:	60 e0       	ldi	r22, 0x00	; 0
     620:	2a f0       	brmi	.+10     	; 0x62c <__floatsisf+0x6c>
     622:	9a 95       	dec	r25
     624:	66 0f       	add	r22, r22
     626:	77 1f       	adc	r23, r23
     628:	88 1f       	adc	r24, r24
     62a:	da f7       	brpl	.-10     	; 0x622 <__floatsisf+0x62>
     62c:	88 0f       	add	r24, r24
     62e:	96 95       	lsr	r25
     630:	87 95       	ror	r24
     632:	97 f9       	bld	r25, 7
     634:	08 95       	ret

00000636 <__fp_inf>:
     636:	97 f9       	bld	r25, 7
     638:	9f 67       	ori	r25, 0x7F	; 127
     63a:	80 e8       	ldi	r24, 0x80	; 128
     63c:	70 e0       	ldi	r23, 0x00	; 0
     63e:	60 e0       	ldi	r22, 0x00	; 0
     640:	08 95       	ret

00000642 <__fp_nan>:
     642:	9f ef       	ldi	r25, 0xFF	; 255
     644:	80 ec       	ldi	r24, 0xC0	; 192
     646:	08 95       	ret

00000648 <__fp_pscA>:
     648:	00 24       	eor	r0, r0
     64a:	0a 94       	dec	r0
     64c:	16 16       	cp	r1, r22
     64e:	17 06       	cpc	r1, r23
     650:	18 06       	cpc	r1, r24
     652:	09 06       	cpc	r0, r25
     654:	08 95       	ret

00000656 <__fp_pscB>:
     656:	00 24       	eor	r0, r0
     658:	0a 94       	dec	r0
     65a:	12 16       	cp	r1, r18
     65c:	13 06       	cpc	r1, r19
     65e:	14 06       	cpc	r1, r20
     660:	05 06       	cpc	r0, r21
     662:	08 95       	ret

00000664 <__fp_round>:
     664:	09 2e       	mov	r0, r25
     666:	03 94       	inc	r0
     668:	00 0c       	add	r0, r0
     66a:	11 f4       	brne	.+4      	; 0x670 <__fp_round+0xc>
     66c:	88 23       	and	r24, r24
     66e:	52 f0       	brmi	.+20     	; 0x684 <__fp_round+0x20>
     670:	bb 0f       	add	r27, r27
     672:	40 f4       	brcc	.+16     	; 0x684 <__fp_round+0x20>
     674:	bf 2b       	or	r27, r31
     676:	11 f4       	brne	.+4      	; 0x67c <__fp_round+0x18>
     678:	60 ff       	sbrs	r22, 0
     67a:	04 c0       	rjmp	.+8      	; 0x684 <__fp_round+0x20>
     67c:	6f 5f       	subi	r22, 0xFF	; 255
     67e:	7f 4f       	sbci	r23, 0xFF	; 255
     680:	8f 4f       	sbci	r24, 0xFF	; 255
     682:	9f 4f       	sbci	r25, 0xFF	; 255
     684:	08 95       	ret

00000686 <__fp_split3>:
     686:	57 fd       	sbrc	r21, 7
     688:	90 58       	subi	r25, 0x80	; 128
     68a:	44 0f       	add	r20, r20
     68c:	55 1f       	adc	r21, r21
     68e:	59 f0       	breq	.+22     	; 0x6a6 <__fp_splitA+0x10>
     690:	5f 3f       	cpi	r21, 0xFF	; 255
     692:	71 f0       	breq	.+28     	; 0x6b0 <__fp_splitA+0x1a>
     694:	47 95       	ror	r20

00000696 <__fp_splitA>:
     696:	88 0f       	add	r24, r24
     698:	97 fb       	bst	r25, 7
     69a:	99 1f       	adc	r25, r25
     69c:	61 f0       	breq	.+24     	; 0x6b6 <__fp_splitA+0x20>
     69e:	9f 3f       	cpi	r25, 0xFF	; 255
     6a0:	79 f0       	breq	.+30     	; 0x6c0 <__fp_splitA+0x2a>
     6a2:	87 95       	ror	r24
     6a4:	08 95       	ret
     6a6:	12 16       	cp	r1, r18
     6a8:	13 06       	cpc	r1, r19
     6aa:	14 06       	cpc	r1, r20
     6ac:	55 1f       	adc	r21, r21
     6ae:	f2 cf       	rjmp	.-28     	; 0x694 <__fp_split3+0xe>
     6b0:	46 95       	lsr	r20
     6b2:	f1 df       	rcall	.-30     	; 0x696 <__fp_splitA>
     6b4:	08 c0       	rjmp	.+16     	; 0x6c6 <__fp_splitA+0x30>
     6b6:	16 16       	cp	r1, r22
     6b8:	17 06       	cpc	r1, r23
     6ba:	18 06       	cpc	r1, r24
     6bc:	99 1f       	adc	r25, r25
     6be:	f1 cf       	rjmp	.-30     	; 0x6a2 <__fp_splitA+0xc>
     6c0:	86 95       	lsr	r24
     6c2:	71 05       	cpc	r23, r1
     6c4:	61 05       	cpc	r22, r1
     6c6:	08 94       	sec
     6c8:	08 95       	ret

000006ca <__fp_zero>:
     6ca:	e8 94       	clt

000006cc <__fp_szero>:
     6cc:	bb 27       	eor	r27, r27
     6ce:	66 27       	eor	r22, r22
     6d0:	77 27       	eor	r23, r23
     6d2:	cb 01       	movw	r24, r22
     6d4:	97 f9       	bld	r25, 7
     6d6:	08 95       	ret

000006d8 <__mulsf3>:
     6d8:	0b d0       	rcall	.+22     	; 0x6f0 <__mulsf3x>
     6da:	c4 cf       	rjmp	.-120    	; 0x664 <__fp_round>
     6dc:	b5 df       	rcall	.-150    	; 0x648 <__fp_pscA>
     6de:	28 f0       	brcs	.+10     	; 0x6ea <__mulsf3+0x12>
     6e0:	ba df       	rcall	.-140    	; 0x656 <__fp_pscB>
     6e2:	18 f0       	brcs	.+6      	; 0x6ea <__mulsf3+0x12>
     6e4:	95 23       	and	r25, r21
     6e6:	09 f0       	breq	.+2      	; 0x6ea <__mulsf3+0x12>
     6e8:	a6 cf       	rjmp	.-180    	; 0x636 <__fp_inf>
     6ea:	ab cf       	rjmp	.-170    	; 0x642 <__fp_nan>
     6ec:	11 24       	eor	r1, r1
     6ee:	ee cf       	rjmp	.-36     	; 0x6cc <__fp_szero>

000006f0 <__mulsf3x>:
     6f0:	ca df       	rcall	.-108    	; 0x686 <__fp_split3>
     6f2:	a0 f3       	brcs	.-24     	; 0x6dc <__mulsf3+0x4>

000006f4 <__mulsf3_pse>:
     6f4:	95 9f       	mul	r25, r21
     6f6:	d1 f3       	breq	.-12     	; 0x6ec <__mulsf3+0x14>
     6f8:	95 0f       	add	r25, r21
     6fa:	50 e0       	ldi	r21, 0x00	; 0
     6fc:	55 1f       	adc	r21, r21
     6fe:	62 9f       	mul	r22, r18
     700:	f0 01       	movw	r30, r0
     702:	72 9f       	mul	r23, r18
     704:	bb 27       	eor	r27, r27
     706:	f0 0d       	add	r31, r0
     708:	b1 1d       	adc	r27, r1
     70a:	63 9f       	mul	r22, r19
     70c:	aa 27       	eor	r26, r26
     70e:	f0 0d       	add	r31, r0
     710:	b1 1d       	adc	r27, r1
     712:	aa 1f       	adc	r26, r26
     714:	64 9f       	mul	r22, r20
     716:	66 27       	eor	r22, r22
     718:	b0 0d       	add	r27, r0
     71a:	a1 1d       	adc	r26, r1
     71c:	66 1f       	adc	r22, r22
     71e:	82 9f       	mul	r24, r18
     720:	22 27       	eor	r18, r18
     722:	b0 0d       	add	r27, r0
     724:	a1 1d       	adc	r26, r1
     726:	62 1f       	adc	r22, r18
     728:	73 9f       	mul	r23, r19
     72a:	b0 0d       	add	r27, r0
     72c:	a1 1d       	adc	r26, r1
     72e:	62 1f       	adc	r22, r18
     730:	83 9f       	mul	r24, r19
     732:	a0 0d       	add	r26, r0
     734:	61 1d       	adc	r22, r1
     736:	22 1f       	adc	r18, r18
     738:	74 9f       	mul	r23, r20
     73a:	33 27       	eor	r19, r19
     73c:	a0 0d       	add	r26, r0
     73e:	61 1d       	adc	r22, r1
     740:	23 1f       	adc	r18, r19
     742:	84 9f       	mul	r24, r20
     744:	60 0d       	add	r22, r0
     746:	21 1d       	adc	r18, r1
     748:	82 2f       	mov	r24, r18
     74a:	76 2f       	mov	r23, r22
     74c:	6a 2f       	mov	r22, r26
     74e:	11 24       	eor	r1, r1
     750:	9f 57       	subi	r25, 0x7F	; 127
     752:	50 40       	sbci	r21, 0x00	; 0
     754:	8a f0       	brmi	.+34     	; 0x778 <__mulsf3_pse+0x84>
     756:	e1 f0       	breq	.+56     	; 0x790 <__mulsf3_pse+0x9c>
     758:	88 23       	and	r24, r24
     75a:	4a f0       	brmi	.+18     	; 0x76e <__mulsf3_pse+0x7a>
     75c:	ee 0f       	add	r30, r30
     75e:	ff 1f       	adc	r31, r31
     760:	bb 1f       	adc	r27, r27
     762:	66 1f       	adc	r22, r22
     764:	77 1f       	adc	r23, r23
     766:	88 1f       	adc	r24, r24
     768:	91 50       	subi	r25, 0x01	; 1
     76a:	50 40       	sbci	r21, 0x00	; 0
     76c:	a9 f7       	brne	.-22     	; 0x758 <__mulsf3_pse+0x64>
     76e:	9e 3f       	cpi	r25, 0xFE	; 254
     770:	51 05       	cpc	r21, r1
     772:	70 f0       	brcs	.+28     	; 0x790 <__mulsf3_pse+0x9c>
     774:	60 cf       	rjmp	.-320    	; 0x636 <__fp_inf>
     776:	aa cf       	rjmp	.-172    	; 0x6cc <__fp_szero>
     778:	5f 3f       	cpi	r21, 0xFF	; 255
     77a:	ec f3       	brlt	.-6      	; 0x776 <__mulsf3_pse+0x82>
     77c:	98 3e       	cpi	r25, 0xE8	; 232
     77e:	dc f3       	brlt	.-10     	; 0x776 <__mulsf3_pse+0x82>
     780:	86 95       	lsr	r24
     782:	77 95       	ror	r23
     784:	67 95       	ror	r22
     786:	b7 95       	ror	r27
     788:	f7 95       	ror	r31
     78a:	e7 95       	ror	r30
     78c:	9f 5f       	subi	r25, 0xFF	; 255
     78e:	c1 f7       	brne	.-16     	; 0x780 <__mulsf3_pse+0x8c>
     790:	fe 2b       	or	r31, r30
     792:	88 0f       	add	r24, r24
     794:	91 1d       	adc	r25, r1
     796:	96 95       	lsr	r25
     798:	87 95       	ror	r24
     79a:	97 f9       	bld	r25, 7
     79c:	08 95       	ret

0000079e <fdevopen>:
     79e:	0f 93       	push	r16
     7a0:	1f 93       	push	r17
     7a2:	cf 93       	push	r28
     7a4:	df 93       	push	r29
     7a6:	00 97       	sbiw	r24, 0x00	; 0
     7a8:	31 f4       	brne	.+12     	; 0x7b6 <fdevopen+0x18>
     7aa:	61 15       	cp	r22, r1
     7ac:	71 05       	cpc	r23, r1
     7ae:	19 f4       	brne	.+6      	; 0x7b6 <fdevopen+0x18>
     7b0:	80 e0       	ldi	r24, 0x00	; 0
     7b2:	90 e0       	ldi	r25, 0x00	; 0
     7b4:	39 c0       	rjmp	.+114    	; 0x828 <fdevopen+0x8a>
     7b6:	8b 01       	movw	r16, r22
     7b8:	ec 01       	movw	r28, r24
     7ba:	6e e0       	ldi	r22, 0x0E	; 14
     7bc:	70 e0       	ldi	r23, 0x00	; 0
     7be:	81 e0       	ldi	r24, 0x01	; 1
     7c0:	90 e0       	ldi	r25, 0x00	; 0
     7c2:	47 d2       	rcall	.+1166   	; 0xc52 <calloc>
     7c4:	fc 01       	movw	r30, r24
     7c6:	89 2b       	or	r24, r25
     7c8:	99 f3       	breq	.-26     	; 0x7b0 <fdevopen+0x12>
     7ca:	80 e8       	ldi	r24, 0x80	; 128
     7cc:	83 83       	std	Z+3, r24	; 0x03
     7ce:	01 15       	cp	r16, r1
     7d0:	11 05       	cpc	r17, r1
     7d2:	71 f0       	breq	.+28     	; 0x7f0 <fdevopen+0x52>
     7d4:	13 87       	std	Z+11, r17	; 0x0b
     7d6:	02 87       	std	Z+10, r16	; 0x0a
     7d8:	81 e8       	ldi	r24, 0x81	; 129
     7da:	83 83       	std	Z+3, r24	; 0x03
     7dc:	80 91 a6 02 	lds	r24, 0x02A6	; 0x8002a6 <__data_end>
     7e0:	90 91 a7 02 	lds	r25, 0x02A7	; 0x8002a7 <__data_end+0x1>
     7e4:	89 2b       	or	r24, r25
     7e6:	21 f4       	brne	.+8      	; 0x7f0 <fdevopen+0x52>
     7e8:	f0 93 a7 02 	sts	0x02A7, r31	; 0x8002a7 <__data_end+0x1>
     7ec:	e0 93 a6 02 	sts	0x02A6, r30	; 0x8002a6 <__data_end>
     7f0:	20 97       	sbiw	r28, 0x00	; 0
     7f2:	c9 f0       	breq	.+50     	; 0x826 <fdevopen+0x88>
     7f4:	d1 87       	std	Z+9, r29	; 0x09
     7f6:	c0 87       	std	Z+8, r28	; 0x08
     7f8:	83 81       	ldd	r24, Z+3	; 0x03
     7fa:	82 60       	ori	r24, 0x02	; 2
     7fc:	83 83       	std	Z+3, r24	; 0x03
     7fe:	80 91 a8 02 	lds	r24, 0x02A8	; 0x8002a8 <__data_end+0x2>
     802:	90 91 a9 02 	lds	r25, 0x02A9	; 0x8002a9 <__data_end+0x3>
     806:	89 2b       	or	r24, r25
     808:	71 f4       	brne	.+28     	; 0x826 <fdevopen+0x88>
     80a:	f0 93 a9 02 	sts	0x02A9, r31	; 0x8002a9 <__data_end+0x3>
     80e:	e0 93 a8 02 	sts	0x02A8, r30	; 0x8002a8 <__data_end+0x2>
     812:	80 91 aa 02 	lds	r24, 0x02AA	; 0x8002aa <__data_end+0x4>
     816:	90 91 ab 02 	lds	r25, 0x02AB	; 0x8002ab <__data_end+0x5>
     81a:	89 2b       	or	r24, r25
     81c:	21 f4       	brne	.+8      	; 0x826 <fdevopen+0x88>
     81e:	f0 93 ab 02 	sts	0x02AB, r31	; 0x8002ab <__data_end+0x5>
     822:	e0 93 aa 02 	sts	0x02AA, r30	; 0x8002aa <__data_end+0x4>
     826:	cf 01       	movw	r24, r30
     828:	df 91       	pop	r29
     82a:	cf 91       	pop	r28
     82c:	1f 91       	pop	r17
     82e:	0f 91       	pop	r16
     830:	08 95       	ret

00000832 <printf>:
     832:	cf 93       	push	r28
     834:	df 93       	push	r29
     836:	cd b7       	in	r28, 0x3d	; 61
     838:	de b7       	in	r29, 0x3e	; 62
     83a:	ae 01       	movw	r20, r28
     83c:	4a 5f       	subi	r20, 0xFA	; 250
     83e:	5f 4f       	sbci	r21, 0xFF	; 255
     840:	fa 01       	movw	r30, r20
     842:	61 91       	ld	r22, Z+
     844:	71 91       	ld	r23, Z+
     846:	af 01       	movw	r20, r30
     848:	80 91 a8 02 	lds	r24, 0x02A8	; 0x8002a8 <__data_end+0x2>
     84c:	90 91 a9 02 	lds	r25, 0x02A9	; 0x8002a9 <__data_end+0x3>
     850:	03 d0       	rcall	.+6      	; 0x858 <vfprintf>
     852:	df 91       	pop	r29
     854:	cf 91       	pop	r28
     856:	08 95       	ret

00000858 <vfprintf>:
     858:	2f 92       	push	r2
     85a:	3f 92       	push	r3
     85c:	4f 92       	push	r4
     85e:	5f 92       	push	r5
     860:	6f 92       	push	r6
     862:	7f 92       	push	r7
     864:	8f 92       	push	r8
     866:	9f 92       	push	r9
     868:	af 92       	push	r10
     86a:	bf 92       	push	r11
     86c:	cf 92       	push	r12
     86e:	df 92       	push	r13
     870:	ef 92       	push	r14
     872:	ff 92       	push	r15
     874:	0f 93       	push	r16
     876:	1f 93       	push	r17
     878:	cf 93       	push	r28
     87a:	df 93       	push	r29
     87c:	cd b7       	in	r28, 0x3d	; 61
     87e:	de b7       	in	r29, 0x3e	; 62
     880:	2b 97       	sbiw	r28, 0x0b	; 11
     882:	0f b6       	in	r0, 0x3f	; 63
     884:	f8 94       	cli
     886:	de bf       	out	0x3e, r29	; 62
     888:	0f be       	out	0x3f, r0	; 63
     88a:	cd bf       	out	0x3d, r28	; 61
     88c:	6c 01       	movw	r12, r24
     88e:	7b 01       	movw	r14, r22
     890:	8a 01       	movw	r16, r20
     892:	fc 01       	movw	r30, r24
     894:	17 82       	std	Z+7, r1	; 0x07
     896:	16 82       	std	Z+6, r1	; 0x06
     898:	83 81       	ldd	r24, Z+3	; 0x03
     89a:	81 ff       	sbrs	r24, 1
     89c:	bf c1       	rjmp	.+894    	; 0xc1c <vfprintf+0x3c4>
     89e:	ce 01       	movw	r24, r28
     8a0:	01 96       	adiw	r24, 0x01	; 1
     8a2:	3c 01       	movw	r6, r24
     8a4:	f6 01       	movw	r30, r12
     8a6:	93 81       	ldd	r25, Z+3	; 0x03
     8a8:	f7 01       	movw	r30, r14
     8aa:	93 fd       	sbrc	r25, 3
     8ac:	85 91       	lpm	r24, Z+
     8ae:	93 ff       	sbrs	r25, 3
     8b0:	81 91       	ld	r24, Z+
     8b2:	7f 01       	movw	r14, r30
     8b4:	88 23       	and	r24, r24
     8b6:	09 f4       	brne	.+2      	; 0x8ba <vfprintf+0x62>
     8b8:	ad c1       	rjmp	.+858    	; 0xc14 <vfprintf+0x3bc>
     8ba:	85 32       	cpi	r24, 0x25	; 37
     8bc:	39 f4       	brne	.+14     	; 0x8cc <vfprintf+0x74>
     8be:	93 fd       	sbrc	r25, 3
     8c0:	85 91       	lpm	r24, Z+
     8c2:	93 ff       	sbrs	r25, 3
     8c4:	81 91       	ld	r24, Z+
     8c6:	7f 01       	movw	r14, r30
     8c8:	85 32       	cpi	r24, 0x25	; 37
     8ca:	21 f4       	brne	.+8      	; 0x8d4 <vfprintf+0x7c>
     8cc:	b6 01       	movw	r22, r12
     8ce:	90 e0       	ldi	r25, 0x00	; 0
     8d0:	18 d3       	rcall	.+1584   	; 0xf02 <fputc>
     8d2:	e8 cf       	rjmp	.-48     	; 0x8a4 <vfprintf+0x4c>
     8d4:	91 2c       	mov	r9, r1
     8d6:	21 2c       	mov	r2, r1
     8d8:	31 2c       	mov	r3, r1
     8da:	ff e1       	ldi	r31, 0x1F	; 31
     8dc:	f3 15       	cp	r31, r3
     8de:	d8 f0       	brcs	.+54     	; 0x916 <vfprintf+0xbe>
     8e0:	8b 32       	cpi	r24, 0x2B	; 43
     8e2:	79 f0       	breq	.+30     	; 0x902 <vfprintf+0xaa>
     8e4:	38 f4       	brcc	.+14     	; 0x8f4 <vfprintf+0x9c>
     8e6:	80 32       	cpi	r24, 0x20	; 32
     8e8:	79 f0       	breq	.+30     	; 0x908 <vfprintf+0xb0>
     8ea:	83 32       	cpi	r24, 0x23	; 35
     8ec:	a1 f4       	brne	.+40     	; 0x916 <vfprintf+0xbe>
     8ee:	23 2d       	mov	r18, r3
     8f0:	20 61       	ori	r18, 0x10	; 16
     8f2:	1d c0       	rjmp	.+58     	; 0x92e <vfprintf+0xd6>
     8f4:	8d 32       	cpi	r24, 0x2D	; 45
     8f6:	61 f0       	breq	.+24     	; 0x910 <vfprintf+0xb8>
     8f8:	80 33       	cpi	r24, 0x30	; 48
     8fa:	69 f4       	brne	.+26     	; 0x916 <vfprintf+0xbe>
     8fc:	23 2d       	mov	r18, r3
     8fe:	21 60       	ori	r18, 0x01	; 1
     900:	16 c0       	rjmp	.+44     	; 0x92e <vfprintf+0xd6>
     902:	83 2d       	mov	r24, r3
     904:	82 60       	ori	r24, 0x02	; 2
     906:	38 2e       	mov	r3, r24
     908:	e3 2d       	mov	r30, r3
     90a:	e4 60       	ori	r30, 0x04	; 4
     90c:	3e 2e       	mov	r3, r30
     90e:	2a c0       	rjmp	.+84     	; 0x964 <vfprintf+0x10c>
     910:	f3 2d       	mov	r31, r3
     912:	f8 60       	ori	r31, 0x08	; 8
     914:	1d c0       	rjmp	.+58     	; 0x950 <vfprintf+0xf8>
     916:	37 fc       	sbrc	r3, 7
     918:	2d c0       	rjmp	.+90     	; 0x974 <vfprintf+0x11c>
     91a:	20 ed       	ldi	r18, 0xD0	; 208
     91c:	28 0f       	add	r18, r24
     91e:	2a 30       	cpi	r18, 0x0A	; 10
     920:	40 f0       	brcs	.+16     	; 0x932 <vfprintf+0xda>
     922:	8e 32       	cpi	r24, 0x2E	; 46
     924:	b9 f4       	brne	.+46     	; 0x954 <vfprintf+0xfc>
     926:	36 fc       	sbrc	r3, 6
     928:	75 c1       	rjmp	.+746    	; 0xc14 <vfprintf+0x3bc>
     92a:	23 2d       	mov	r18, r3
     92c:	20 64       	ori	r18, 0x40	; 64
     92e:	32 2e       	mov	r3, r18
     930:	19 c0       	rjmp	.+50     	; 0x964 <vfprintf+0x10c>
     932:	36 fe       	sbrs	r3, 6
     934:	06 c0       	rjmp	.+12     	; 0x942 <vfprintf+0xea>
     936:	8a e0       	ldi	r24, 0x0A	; 10
     938:	98 9e       	mul	r9, r24
     93a:	20 0d       	add	r18, r0
     93c:	11 24       	eor	r1, r1
     93e:	92 2e       	mov	r9, r18
     940:	11 c0       	rjmp	.+34     	; 0x964 <vfprintf+0x10c>
     942:	ea e0       	ldi	r30, 0x0A	; 10
     944:	2e 9e       	mul	r2, r30
     946:	20 0d       	add	r18, r0
     948:	11 24       	eor	r1, r1
     94a:	22 2e       	mov	r2, r18
     94c:	f3 2d       	mov	r31, r3
     94e:	f0 62       	ori	r31, 0x20	; 32
     950:	3f 2e       	mov	r3, r31
     952:	08 c0       	rjmp	.+16     	; 0x964 <vfprintf+0x10c>
     954:	8c 36       	cpi	r24, 0x6C	; 108
     956:	21 f4       	brne	.+8      	; 0x960 <vfprintf+0x108>
     958:	83 2d       	mov	r24, r3
     95a:	80 68       	ori	r24, 0x80	; 128
     95c:	38 2e       	mov	r3, r24
     95e:	02 c0       	rjmp	.+4      	; 0x964 <vfprintf+0x10c>
     960:	88 36       	cpi	r24, 0x68	; 104
     962:	41 f4       	brne	.+16     	; 0x974 <vfprintf+0x11c>
     964:	f7 01       	movw	r30, r14
     966:	93 fd       	sbrc	r25, 3
     968:	85 91       	lpm	r24, Z+
     96a:	93 ff       	sbrs	r25, 3
     96c:	81 91       	ld	r24, Z+
     96e:	7f 01       	movw	r14, r30
     970:	81 11       	cpse	r24, r1
     972:	b3 cf       	rjmp	.-154    	; 0x8da <vfprintf+0x82>
     974:	98 2f       	mov	r25, r24
     976:	9f 7d       	andi	r25, 0xDF	; 223
     978:	95 54       	subi	r25, 0x45	; 69
     97a:	93 30       	cpi	r25, 0x03	; 3
     97c:	28 f4       	brcc	.+10     	; 0x988 <vfprintf+0x130>
     97e:	0c 5f       	subi	r16, 0xFC	; 252
     980:	1f 4f       	sbci	r17, 0xFF	; 255
     982:	9f e3       	ldi	r25, 0x3F	; 63
     984:	99 83       	std	Y+1, r25	; 0x01
     986:	0d c0       	rjmp	.+26     	; 0x9a2 <vfprintf+0x14a>
     988:	83 36       	cpi	r24, 0x63	; 99
     98a:	31 f0       	breq	.+12     	; 0x998 <vfprintf+0x140>
     98c:	83 37       	cpi	r24, 0x73	; 115
     98e:	71 f0       	breq	.+28     	; 0x9ac <vfprintf+0x154>
     990:	83 35       	cpi	r24, 0x53	; 83
     992:	09 f0       	breq	.+2      	; 0x996 <vfprintf+0x13e>
     994:	55 c0       	rjmp	.+170    	; 0xa40 <vfprintf+0x1e8>
     996:	20 c0       	rjmp	.+64     	; 0x9d8 <vfprintf+0x180>
     998:	f8 01       	movw	r30, r16
     99a:	80 81       	ld	r24, Z
     99c:	89 83       	std	Y+1, r24	; 0x01
     99e:	0e 5f       	subi	r16, 0xFE	; 254
     9a0:	1f 4f       	sbci	r17, 0xFF	; 255
     9a2:	88 24       	eor	r8, r8
     9a4:	83 94       	inc	r8
     9a6:	91 2c       	mov	r9, r1
     9a8:	53 01       	movw	r10, r6
     9aa:	12 c0       	rjmp	.+36     	; 0x9d0 <vfprintf+0x178>
     9ac:	28 01       	movw	r4, r16
     9ae:	f2 e0       	ldi	r31, 0x02	; 2
     9b0:	4f 0e       	add	r4, r31
     9b2:	51 1c       	adc	r5, r1
     9b4:	f8 01       	movw	r30, r16
     9b6:	a0 80       	ld	r10, Z
     9b8:	b1 80       	ldd	r11, Z+1	; 0x01
     9ba:	36 fe       	sbrs	r3, 6
     9bc:	03 c0       	rjmp	.+6      	; 0x9c4 <vfprintf+0x16c>
     9be:	69 2d       	mov	r22, r9
     9c0:	70 e0       	ldi	r23, 0x00	; 0
     9c2:	02 c0       	rjmp	.+4      	; 0x9c8 <vfprintf+0x170>
     9c4:	6f ef       	ldi	r22, 0xFF	; 255
     9c6:	7f ef       	ldi	r23, 0xFF	; 255
     9c8:	c5 01       	movw	r24, r10
     9ca:	90 d2       	rcall	.+1312   	; 0xeec <strnlen>
     9cc:	4c 01       	movw	r8, r24
     9ce:	82 01       	movw	r16, r4
     9d0:	f3 2d       	mov	r31, r3
     9d2:	ff 77       	andi	r31, 0x7F	; 127
     9d4:	3f 2e       	mov	r3, r31
     9d6:	15 c0       	rjmp	.+42     	; 0xa02 <vfprintf+0x1aa>
     9d8:	28 01       	movw	r4, r16
     9da:	22 e0       	ldi	r18, 0x02	; 2
     9dc:	42 0e       	add	r4, r18
     9de:	51 1c       	adc	r5, r1
     9e0:	f8 01       	movw	r30, r16
     9e2:	a0 80       	ld	r10, Z
     9e4:	b1 80       	ldd	r11, Z+1	; 0x01
     9e6:	36 fe       	sbrs	r3, 6
     9e8:	03 c0       	rjmp	.+6      	; 0x9f0 <vfprintf+0x198>
     9ea:	69 2d       	mov	r22, r9
     9ec:	70 e0       	ldi	r23, 0x00	; 0
     9ee:	02 c0       	rjmp	.+4      	; 0x9f4 <vfprintf+0x19c>
     9f0:	6f ef       	ldi	r22, 0xFF	; 255
     9f2:	7f ef       	ldi	r23, 0xFF	; 255
     9f4:	c5 01       	movw	r24, r10
     9f6:	68 d2       	rcall	.+1232   	; 0xec8 <strnlen_P>
     9f8:	4c 01       	movw	r8, r24
     9fa:	f3 2d       	mov	r31, r3
     9fc:	f0 68       	ori	r31, 0x80	; 128
     9fe:	3f 2e       	mov	r3, r31
     a00:	82 01       	movw	r16, r4
     a02:	33 fc       	sbrc	r3, 3
     a04:	19 c0       	rjmp	.+50     	; 0xa38 <vfprintf+0x1e0>
     a06:	82 2d       	mov	r24, r2
     a08:	90 e0       	ldi	r25, 0x00	; 0
     a0a:	88 16       	cp	r8, r24
     a0c:	99 06       	cpc	r9, r25
     a0e:	a0 f4       	brcc	.+40     	; 0xa38 <vfprintf+0x1e0>
     a10:	b6 01       	movw	r22, r12
     a12:	80 e2       	ldi	r24, 0x20	; 32
     a14:	90 e0       	ldi	r25, 0x00	; 0
     a16:	75 d2       	rcall	.+1258   	; 0xf02 <fputc>
     a18:	2a 94       	dec	r2
     a1a:	f5 cf       	rjmp	.-22     	; 0xa06 <vfprintf+0x1ae>
     a1c:	f5 01       	movw	r30, r10
     a1e:	37 fc       	sbrc	r3, 7
     a20:	85 91       	lpm	r24, Z+
     a22:	37 fe       	sbrs	r3, 7
     a24:	81 91       	ld	r24, Z+
     a26:	5f 01       	movw	r10, r30
     a28:	b6 01       	movw	r22, r12
     a2a:	90 e0       	ldi	r25, 0x00	; 0
     a2c:	6a d2       	rcall	.+1236   	; 0xf02 <fputc>
     a2e:	21 10       	cpse	r2, r1
     a30:	2a 94       	dec	r2
     a32:	21 e0       	ldi	r18, 0x01	; 1
     a34:	82 1a       	sub	r8, r18
     a36:	91 08       	sbc	r9, r1
     a38:	81 14       	cp	r8, r1
     a3a:	91 04       	cpc	r9, r1
     a3c:	79 f7       	brne	.-34     	; 0xa1c <vfprintf+0x1c4>
     a3e:	e1 c0       	rjmp	.+450    	; 0xc02 <vfprintf+0x3aa>
     a40:	84 36       	cpi	r24, 0x64	; 100
     a42:	11 f0       	breq	.+4      	; 0xa48 <vfprintf+0x1f0>
     a44:	89 36       	cpi	r24, 0x69	; 105
     a46:	39 f5       	brne	.+78     	; 0xa96 <vfprintf+0x23e>
     a48:	f8 01       	movw	r30, r16
     a4a:	37 fe       	sbrs	r3, 7
     a4c:	07 c0       	rjmp	.+14     	; 0xa5c <vfprintf+0x204>
     a4e:	60 81       	ld	r22, Z
     a50:	71 81       	ldd	r23, Z+1	; 0x01
     a52:	82 81       	ldd	r24, Z+2	; 0x02
     a54:	93 81       	ldd	r25, Z+3	; 0x03
     a56:	0c 5f       	subi	r16, 0xFC	; 252
     a58:	1f 4f       	sbci	r17, 0xFF	; 255
     a5a:	08 c0       	rjmp	.+16     	; 0xa6c <vfprintf+0x214>
     a5c:	60 81       	ld	r22, Z
     a5e:	71 81       	ldd	r23, Z+1	; 0x01
     a60:	07 2e       	mov	r0, r23
     a62:	00 0c       	add	r0, r0
     a64:	88 0b       	sbc	r24, r24
     a66:	99 0b       	sbc	r25, r25
     a68:	0e 5f       	subi	r16, 0xFE	; 254
     a6a:	1f 4f       	sbci	r17, 0xFF	; 255
     a6c:	f3 2d       	mov	r31, r3
     a6e:	ff 76       	andi	r31, 0x6F	; 111
     a70:	3f 2e       	mov	r3, r31
     a72:	97 ff       	sbrs	r25, 7
     a74:	09 c0       	rjmp	.+18     	; 0xa88 <vfprintf+0x230>
     a76:	90 95       	com	r25
     a78:	80 95       	com	r24
     a7a:	70 95       	com	r23
     a7c:	61 95       	neg	r22
     a7e:	7f 4f       	sbci	r23, 0xFF	; 255
     a80:	8f 4f       	sbci	r24, 0xFF	; 255
     a82:	9f 4f       	sbci	r25, 0xFF	; 255
     a84:	f0 68       	ori	r31, 0x80	; 128
     a86:	3f 2e       	mov	r3, r31
     a88:	2a e0       	ldi	r18, 0x0A	; 10
     a8a:	30 e0       	ldi	r19, 0x00	; 0
     a8c:	a3 01       	movw	r20, r6
     a8e:	75 d2       	rcall	.+1258   	; 0xf7a <__ultoa_invert>
     a90:	88 2e       	mov	r8, r24
     a92:	86 18       	sub	r8, r6
     a94:	44 c0       	rjmp	.+136    	; 0xb1e <vfprintf+0x2c6>
     a96:	85 37       	cpi	r24, 0x75	; 117
     a98:	31 f4       	brne	.+12     	; 0xaa6 <vfprintf+0x24e>
     a9a:	23 2d       	mov	r18, r3
     a9c:	2f 7e       	andi	r18, 0xEF	; 239
     a9e:	b2 2e       	mov	r11, r18
     aa0:	2a e0       	ldi	r18, 0x0A	; 10
     aa2:	30 e0       	ldi	r19, 0x00	; 0
     aa4:	25 c0       	rjmp	.+74     	; 0xaf0 <vfprintf+0x298>
     aa6:	93 2d       	mov	r25, r3
     aa8:	99 7f       	andi	r25, 0xF9	; 249
     aaa:	b9 2e       	mov	r11, r25
     aac:	8f 36       	cpi	r24, 0x6F	; 111
     aae:	c1 f0       	breq	.+48     	; 0xae0 <vfprintf+0x288>
     ab0:	18 f4       	brcc	.+6      	; 0xab8 <vfprintf+0x260>
     ab2:	88 35       	cpi	r24, 0x58	; 88
     ab4:	79 f0       	breq	.+30     	; 0xad4 <vfprintf+0x27c>
     ab6:	ae c0       	rjmp	.+348    	; 0xc14 <vfprintf+0x3bc>
     ab8:	80 37       	cpi	r24, 0x70	; 112
     aba:	19 f0       	breq	.+6      	; 0xac2 <vfprintf+0x26a>
     abc:	88 37       	cpi	r24, 0x78	; 120
     abe:	21 f0       	breq	.+8      	; 0xac8 <vfprintf+0x270>
     ac0:	a9 c0       	rjmp	.+338    	; 0xc14 <vfprintf+0x3bc>
     ac2:	e9 2f       	mov	r30, r25
     ac4:	e0 61       	ori	r30, 0x10	; 16
     ac6:	be 2e       	mov	r11, r30
     ac8:	b4 fe       	sbrs	r11, 4
     aca:	0d c0       	rjmp	.+26     	; 0xae6 <vfprintf+0x28e>
     acc:	fb 2d       	mov	r31, r11
     ace:	f4 60       	ori	r31, 0x04	; 4
     ad0:	bf 2e       	mov	r11, r31
     ad2:	09 c0       	rjmp	.+18     	; 0xae6 <vfprintf+0x28e>
     ad4:	34 fe       	sbrs	r3, 4
     ad6:	0a c0       	rjmp	.+20     	; 0xaec <vfprintf+0x294>
     ad8:	29 2f       	mov	r18, r25
     ada:	26 60       	ori	r18, 0x06	; 6
     adc:	b2 2e       	mov	r11, r18
     ade:	06 c0       	rjmp	.+12     	; 0xaec <vfprintf+0x294>
     ae0:	28 e0       	ldi	r18, 0x08	; 8
     ae2:	30 e0       	ldi	r19, 0x00	; 0
     ae4:	05 c0       	rjmp	.+10     	; 0xaf0 <vfprintf+0x298>
     ae6:	20 e1       	ldi	r18, 0x10	; 16
     ae8:	30 e0       	ldi	r19, 0x00	; 0
     aea:	02 c0       	rjmp	.+4      	; 0xaf0 <vfprintf+0x298>
     aec:	20 e1       	ldi	r18, 0x10	; 16
     aee:	32 e0       	ldi	r19, 0x02	; 2
     af0:	f8 01       	movw	r30, r16
     af2:	b7 fe       	sbrs	r11, 7
     af4:	07 c0       	rjmp	.+14     	; 0xb04 <vfprintf+0x2ac>
     af6:	60 81       	ld	r22, Z
     af8:	71 81       	ldd	r23, Z+1	; 0x01
     afa:	82 81       	ldd	r24, Z+2	; 0x02
     afc:	93 81       	ldd	r25, Z+3	; 0x03
     afe:	0c 5f       	subi	r16, 0xFC	; 252
     b00:	1f 4f       	sbci	r17, 0xFF	; 255
     b02:	06 c0       	rjmp	.+12     	; 0xb10 <vfprintf+0x2b8>
     b04:	60 81       	ld	r22, Z
     b06:	71 81       	ldd	r23, Z+1	; 0x01
     b08:	80 e0       	ldi	r24, 0x00	; 0
     b0a:	90 e0       	ldi	r25, 0x00	; 0
     b0c:	0e 5f       	subi	r16, 0xFE	; 254
     b0e:	1f 4f       	sbci	r17, 0xFF	; 255
     b10:	a3 01       	movw	r20, r6
     b12:	33 d2       	rcall	.+1126   	; 0xf7a <__ultoa_invert>
     b14:	88 2e       	mov	r8, r24
     b16:	86 18       	sub	r8, r6
     b18:	fb 2d       	mov	r31, r11
     b1a:	ff 77       	andi	r31, 0x7F	; 127
     b1c:	3f 2e       	mov	r3, r31
     b1e:	36 fe       	sbrs	r3, 6
     b20:	0d c0       	rjmp	.+26     	; 0xb3c <vfprintf+0x2e4>
     b22:	23 2d       	mov	r18, r3
     b24:	2e 7f       	andi	r18, 0xFE	; 254
     b26:	a2 2e       	mov	r10, r18
     b28:	89 14       	cp	r8, r9
     b2a:	58 f4       	brcc	.+22     	; 0xb42 <vfprintf+0x2ea>
     b2c:	34 fe       	sbrs	r3, 4
     b2e:	0b c0       	rjmp	.+22     	; 0xb46 <vfprintf+0x2ee>
     b30:	32 fc       	sbrc	r3, 2
     b32:	09 c0       	rjmp	.+18     	; 0xb46 <vfprintf+0x2ee>
     b34:	83 2d       	mov	r24, r3
     b36:	8e 7e       	andi	r24, 0xEE	; 238
     b38:	a8 2e       	mov	r10, r24
     b3a:	05 c0       	rjmp	.+10     	; 0xb46 <vfprintf+0x2ee>
     b3c:	b8 2c       	mov	r11, r8
     b3e:	a3 2c       	mov	r10, r3
     b40:	03 c0       	rjmp	.+6      	; 0xb48 <vfprintf+0x2f0>
     b42:	b8 2c       	mov	r11, r8
     b44:	01 c0       	rjmp	.+2      	; 0xb48 <vfprintf+0x2f0>
     b46:	b9 2c       	mov	r11, r9
     b48:	a4 fe       	sbrs	r10, 4
     b4a:	0f c0       	rjmp	.+30     	; 0xb6a <vfprintf+0x312>
     b4c:	fe 01       	movw	r30, r28
     b4e:	e8 0d       	add	r30, r8
     b50:	f1 1d       	adc	r31, r1
     b52:	80 81       	ld	r24, Z
     b54:	80 33       	cpi	r24, 0x30	; 48
     b56:	21 f4       	brne	.+8      	; 0xb60 <vfprintf+0x308>
     b58:	9a 2d       	mov	r25, r10
     b5a:	99 7e       	andi	r25, 0xE9	; 233
     b5c:	a9 2e       	mov	r10, r25
     b5e:	09 c0       	rjmp	.+18     	; 0xb72 <vfprintf+0x31a>
     b60:	a2 fe       	sbrs	r10, 2
     b62:	06 c0       	rjmp	.+12     	; 0xb70 <vfprintf+0x318>
     b64:	b3 94       	inc	r11
     b66:	b3 94       	inc	r11
     b68:	04 c0       	rjmp	.+8      	; 0xb72 <vfprintf+0x31a>
     b6a:	8a 2d       	mov	r24, r10
     b6c:	86 78       	andi	r24, 0x86	; 134
     b6e:	09 f0       	breq	.+2      	; 0xb72 <vfprintf+0x31a>
     b70:	b3 94       	inc	r11
     b72:	a3 fc       	sbrc	r10, 3
     b74:	10 c0       	rjmp	.+32     	; 0xb96 <vfprintf+0x33e>
     b76:	a0 fe       	sbrs	r10, 0
     b78:	06 c0       	rjmp	.+12     	; 0xb86 <vfprintf+0x32e>
     b7a:	b2 14       	cp	r11, r2
     b7c:	80 f4       	brcc	.+32     	; 0xb9e <vfprintf+0x346>
     b7e:	28 0c       	add	r2, r8
     b80:	92 2c       	mov	r9, r2
     b82:	9b 18       	sub	r9, r11
     b84:	0d c0       	rjmp	.+26     	; 0xba0 <vfprintf+0x348>
     b86:	b2 14       	cp	r11, r2
     b88:	58 f4       	brcc	.+22     	; 0xba0 <vfprintf+0x348>
     b8a:	b6 01       	movw	r22, r12
     b8c:	80 e2       	ldi	r24, 0x20	; 32
     b8e:	90 e0       	ldi	r25, 0x00	; 0
     b90:	b8 d1       	rcall	.+880    	; 0xf02 <fputc>
     b92:	b3 94       	inc	r11
     b94:	f8 cf       	rjmp	.-16     	; 0xb86 <vfprintf+0x32e>
     b96:	b2 14       	cp	r11, r2
     b98:	18 f4       	brcc	.+6      	; 0xba0 <vfprintf+0x348>
     b9a:	2b 18       	sub	r2, r11
     b9c:	02 c0       	rjmp	.+4      	; 0xba2 <vfprintf+0x34a>
     b9e:	98 2c       	mov	r9, r8
     ba0:	21 2c       	mov	r2, r1
     ba2:	a4 fe       	sbrs	r10, 4
     ba4:	0f c0       	rjmp	.+30     	; 0xbc4 <vfprintf+0x36c>
     ba6:	b6 01       	movw	r22, r12
     ba8:	80 e3       	ldi	r24, 0x30	; 48
     baa:	90 e0       	ldi	r25, 0x00	; 0
     bac:	aa d1       	rcall	.+852    	; 0xf02 <fputc>
     bae:	a2 fe       	sbrs	r10, 2
     bb0:	16 c0       	rjmp	.+44     	; 0xbde <vfprintf+0x386>
     bb2:	a1 fc       	sbrc	r10, 1
     bb4:	03 c0       	rjmp	.+6      	; 0xbbc <vfprintf+0x364>
     bb6:	88 e7       	ldi	r24, 0x78	; 120
     bb8:	90 e0       	ldi	r25, 0x00	; 0
     bba:	02 c0       	rjmp	.+4      	; 0xbc0 <vfprintf+0x368>
     bbc:	88 e5       	ldi	r24, 0x58	; 88
     bbe:	90 e0       	ldi	r25, 0x00	; 0
     bc0:	b6 01       	movw	r22, r12
     bc2:	0c c0       	rjmp	.+24     	; 0xbdc <vfprintf+0x384>
     bc4:	8a 2d       	mov	r24, r10
     bc6:	86 78       	andi	r24, 0x86	; 134
     bc8:	51 f0       	breq	.+20     	; 0xbde <vfprintf+0x386>
     bca:	a1 fe       	sbrs	r10, 1
     bcc:	02 c0       	rjmp	.+4      	; 0xbd2 <vfprintf+0x37a>
     bce:	8b e2       	ldi	r24, 0x2B	; 43
     bd0:	01 c0       	rjmp	.+2      	; 0xbd4 <vfprintf+0x37c>
     bd2:	80 e2       	ldi	r24, 0x20	; 32
     bd4:	a7 fc       	sbrc	r10, 7
     bd6:	8d e2       	ldi	r24, 0x2D	; 45
     bd8:	b6 01       	movw	r22, r12
     bda:	90 e0       	ldi	r25, 0x00	; 0
     bdc:	92 d1       	rcall	.+804    	; 0xf02 <fputc>
     bde:	89 14       	cp	r8, r9
     be0:	30 f4       	brcc	.+12     	; 0xbee <vfprintf+0x396>
     be2:	b6 01       	movw	r22, r12
     be4:	80 e3       	ldi	r24, 0x30	; 48
     be6:	90 e0       	ldi	r25, 0x00	; 0
     be8:	8c d1       	rcall	.+792    	; 0xf02 <fputc>
     bea:	9a 94       	dec	r9
     bec:	f8 cf       	rjmp	.-16     	; 0xbde <vfprintf+0x386>
     bee:	8a 94       	dec	r8
     bf0:	f3 01       	movw	r30, r6
     bf2:	e8 0d       	add	r30, r8
     bf4:	f1 1d       	adc	r31, r1
     bf6:	80 81       	ld	r24, Z
     bf8:	b6 01       	movw	r22, r12
     bfa:	90 e0       	ldi	r25, 0x00	; 0
     bfc:	82 d1       	rcall	.+772    	; 0xf02 <fputc>
     bfe:	81 10       	cpse	r8, r1
     c00:	f6 cf       	rjmp	.-20     	; 0xbee <vfprintf+0x396>
     c02:	22 20       	and	r2, r2
     c04:	09 f4       	brne	.+2      	; 0xc08 <vfprintf+0x3b0>
     c06:	4e ce       	rjmp	.-868    	; 0x8a4 <vfprintf+0x4c>
     c08:	b6 01       	movw	r22, r12
     c0a:	80 e2       	ldi	r24, 0x20	; 32
     c0c:	90 e0       	ldi	r25, 0x00	; 0
     c0e:	79 d1       	rcall	.+754    	; 0xf02 <fputc>
     c10:	2a 94       	dec	r2
     c12:	f7 cf       	rjmp	.-18     	; 0xc02 <vfprintf+0x3aa>
     c14:	f6 01       	movw	r30, r12
     c16:	86 81       	ldd	r24, Z+6	; 0x06
     c18:	97 81       	ldd	r25, Z+7	; 0x07
     c1a:	02 c0       	rjmp	.+4      	; 0xc20 <vfprintf+0x3c8>
     c1c:	8f ef       	ldi	r24, 0xFF	; 255
     c1e:	9f ef       	ldi	r25, 0xFF	; 255
     c20:	2b 96       	adiw	r28, 0x0b	; 11
     c22:	0f b6       	in	r0, 0x3f	; 63
     c24:	f8 94       	cli
     c26:	de bf       	out	0x3e, r29	; 62
     c28:	0f be       	out	0x3f, r0	; 63
     c2a:	cd bf       	out	0x3d, r28	; 61
     c2c:	df 91       	pop	r29
     c2e:	cf 91       	pop	r28
     c30:	1f 91       	pop	r17
     c32:	0f 91       	pop	r16
     c34:	ff 90       	pop	r15
     c36:	ef 90       	pop	r14
     c38:	df 90       	pop	r13
     c3a:	cf 90       	pop	r12
     c3c:	bf 90       	pop	r11
     c3e:	af 90       	pop	r10
     c40:	9f 90       	pop	r9
     c42:	8f 90       	pop	r8
     c44:	7f 90       	pop	r7
     c46:	6f 90       	pop	r6
     c48:	5f 90       	pop	r5
     c4a:	4f 90       	pop	r4
     c4c:	3f 90       	pop	r3
     c4e:	2f 90       	pop	r2
     c50:	08 95       	ret

00000c52 <calloc>:
     c52:	0f 93       	push	r16
     c54:	1f 93       	push	r17
     c56:	cf 93       	push	r28
     c58:	df 93       	push	r29
     c5a:	86 9f       	mul	r24, r22
     c5c:	80 01       	movw	r16, r0
     c5e:	87 9f       	mul	r24, r23
     c60:	10 0d       	add	r17, r0
     c62:	96 9f       	mul	r25, r22
     c64:	10 0d       	add	r17, r0
     c66:	11 24       	eor	r1, r1
     c68:	c8 01       	movw	r24, r16
     c6a:	0d d0       	rcall	.+26     	; 0xc86 <malloc>
     c6c:	ec 01       	movw	r28, r24
     c6e:	00 97       	sbiw	r24, 0x00	; 0
     c70:	21 f0       	breq	.+8      	; 0xc7a <calloc+0x28>
     c72:	a8 01       	movw	r20, r16
     c74:	60 e0       	ldi	r22, 0x00	; 0
     c76:	70 e0       	ldi	r23, 0x00	; 0
     c78:	32 d1       	rcall	.+612    	; 0xede <memset>
     c7a:	ce 01       	movw	r24, r28
     c7c:	df 91       	pop	r29
     c7e:	cf 91       	pop	r28
     c80:	1f 91       	pop	r17
     c82:	0f 91       	pop	r16
     c84:	08 95       	ret

00000c86 <malloc>:
     c86:	0f 93       	push	r16
     c88:	1f 93       	push	r17
     c8a:	cf 93       	push	r28
     c8c:	df 93       	push	r29
     c8e:	82 30       	cpi	r24, 0x02	; 2
     c90:	91 05       	cpc	r25, r1
     c92:	10 f4       	brcc	.+4      	; 0xc98 <malloc+0x12>
     c94:	82 e0       	ldi	r24, 0x02	; 2
     c96:	90 e0       	ldi	r25, 0x00	; 0
     c98:	e0 91 ae 02 	lds	r30, 0x02AE	; 0x8002ae <__flp>
     c9c:	f0 91 af 02 	lds	r31, 0x02AF	; 0x8002af <__flp+0x1>
     ca0:	20 e0       	ldi	r18, 0x00	; 0
     ca2:	30 e0       	ldi	r19, 0x00	; 0
     ca4:	a0 e0       	ldi	r26, 0x00	; 0
     ca6:	b0 e0       	ldi	r27, 0x00	; 0
     ca8:	30 97       	sbiw	r30, 0x00	; 0
     caa:	19 f1       	breq	.+70     	; 0xcf2 <malloc+0x6c>
     cac:	40 81       	ld	r20, Z
     cae:	51 81       	ldd	r21, Z+1	; 0x01
     cb0:	02 81       	ldd	r16, Z+2	; 0x02
     cb2:	13 81       	ldd	r17, Z+3	; 0x03
     cb4:	48 17       	cp	r20, r24
     cb6:	59 07       	cpc	r21, r25
     cb8:	c8 f0       	brcs	.+50     	; 0xcec <malloc+0x66>
     cba:	84 17       	cp	r24, r20
     cbc:	95 07       	cpc	r25, r21
     cbe:	69 f4       	brne	.+26     	; 0xcda <malloc+0x54>
     cc0:	10 97       	sbiw	r26, 0x00	; 0
     cc2:	31 f0       	breq	.+12     	; 0xcd0 <malloc+0x4a>
     cc4:	12 96       	adiw	r26, 0x02	; 2
     cc6:	0c 93       	st	X, r16
     cc8:	12 97       	sbiw	r26, 0x02	; 2
     cca:	13 96       	adiw	r26, 0x03	; 3
     ccc:	1c 93       	st	X, r17
     cce:	27 c0       	rjmp	.+78     	; 0xd1e <malloc+0x98>
     cd0:	00 93 ae 02 	sts	0x02AE, r16	; 0x8002ae <__flp>
     cd4:	10 93 af 02 	sts	0x02AF, r17	; 0x8002af <__flp+0x1>
     cd8:	22 c0       	rjmp	.+68     	; 0xd1e <malloc+0x98>
     cda:	21 15       	cp	r18, r1
     cdc:	31 05       	cpc	r19, r1
     cde:	19 f0       	breq	.+6      	; 0xce6 <malloc+0x60>
     ce0:	42 17       	cp	r20, r18
     ce2:	53 07       	cpc	r21, r19
     ce4:	18 f4       	brcc	.+6      	; 0xcec <malloc+0x66>
     ce6:	9a 01       	movw	r18, r20
     ce8:	bd 01       	movw	r22, r26
     cea:	ef 01       	movw	r28, r30
     cec:	df 01       	movw	r26, r30
     cee:	f8 01       	movw	r30, r16
     cf0:	db cf       	rjmp	.-74     	; 0xca8 <malloc+0x22>
     cf2:	21 15       	cp	r18, r1
     cf4:	31 05       	cpc	r19, r1
     cf6:	f9 f0       	breq	.+62     	; 0xd36 <malloc+0xb0>
     cf8:	28 1b       	sub	r18, r24
     cfa:	39 0b       	sbc	r19, r25
     cfc:	24 30       	cpi	r18, 0x04	; 4
     cfe:	31 05       	cpc	r19, r1
     d00:	80 f4       	brcc	.+32     	; 0xd22 <malloc+0x9c>
     d02:	8a 81       	ldd	r24, Y+2	; 0x02
     d04:	9b 81       	ldd	r25, Y+3	; 0x03
     d06:	61 15       	cp	r22, r1
     d08:	71 05       	cpc	r23, r1
     d0a:	21 f0       	breq	.+8      	; 0xd14 <malloc+0x8e>
     d0c:	fb 01       	movw	r30, r22
     d0e:	93 83       	std	Z+3, r25	; 0x03
     d10:	82 83       	std	Z+2, r24	; 0x02
     d12:	04 c0       	rjmp	.+8      	; 0xd1c <malloc+0x96>
     d14:	90 93 af 02 	sts	0x02AF, r25	; 0x8002af <__flp+0x1>
     d18:	80 93 ae 02 	sts	0x02AE, r24	; 0x8002ae <__flp>
     d1c:	fe 01       	movw	r30, r28
     d1e:	32 96       	adiw	r30, 0x02	; 2
     d20:	44 c0       	rjmp	.+136    	; 0xdaa <malloc+0x124>
     d22:	fe 01       	movw	r30, r28
     d24:	e2 0f       	add	r30, r18
     d26:	f3 1f       	adc	r31, r19
     d28:	81 93       	st	Z+, r24
     d2a:	91 93       	st	Z+, r25
     d2c:	22 50       	subi	r18, 0x02	; 2
     d2e:	31 09       	sbc	r19, r1
     d30:	39 83       	std	Y+1, r19	; 0x01
     d32:	28 83       	st	Y, r18
     d34:	3a c0       	rjmp	.+116    	; 0xdaa <malloc+0x124>
     d36:	20 91 ac 02 	lds	r18, 0x02AC	; 0x8002ac <__brkval>
     d3a:	30 91 ad 02 	lds	r19, 0x02AD	; 0x8002ad <__brkval+0x1>
     d3e:	23 2b       	or	r18, r19
     d40:	41 f4       	brne	.+16     	; 0xd52 <malloc+0xcc>
     d42:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
     d46:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
     d4a:	30 93 ad 02 	sts	0x02AD, r19	; 0x8002ad <__brkval+0x1>
     d4e:	20 93 ac 02 	sts	0x02AC, r18	; 0x8002ac <__brkval>
     d52:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
     d56:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
     d5a:	21 15       	cp	r18, r1
     d5c:	31 05       	cpc	r19, r1
     d5e:	41 f4       	brne	.+16     	; 0xd70 <malloc+0xea>
     d60:	2d b7       	in	r18, 0x3d	; 61
     d62:	3e b7       	in	r19, 0x3e	; 62
     d64:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
     d68:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
     d6c:	24 1b       	sub	r18, r20
     d6e:	35 0b       	sbc	r19, r21
     d70:	e0 91 ac 02 	lds	r30, 0x02AC	; 0x8002ac <__brkval>
     d74:	f0 91 ad 02 	lds	r31, 0x02AD	; 0x8002ad <__brkval+0x1>
     d78:	e2 17       	cp	r30, r18
     d7a:	f3 07       	cpc	r31, r19
     d7c:	a0 f4       	brcc	.+40     	; 0xda6 <malloc+0x120>
     d7e:	2e 1b       	sub	r18, r30
     d80:	3f 0b       	sbc	r19, r31
     d82:	28 17       	cp	r18, r24
     d84:	39 07       	cpc	r19, r25
     d86:	78 f0       	brcs	.+30     	; 0xda6 <malloc+0x120>
     d88:	ac 01       	movw	r20, r24
     d8a:	4e 5f       	subi	r20, 0xFE	; 254
     d8c:	5f 4f       	sbci	r21, 0xFF	; 255
     d8e:	24 17       	cp	r18, r20
     d90:	35 07       	cpc	r19, r21
     d92:	48 f0       	brcs	.+18     	; 0xda6 <malloc+0x120>
     d94:	4e 0f       	add	r20, r30
     d96:	5f 1f       	adc	r21, r31
     d98:	50 93 ad 02 	sts	0x02AD, r21	; 0x8002ad <__brkval+0x1>
     d9c:	40 93 ac 02 	sts	0x02AC, r20	; 0x8002ac <__brkval>
     da0:	81 93       	st	Z+, r24
     da2:	91 93       	st	Z+, r25
     da4:	02 c0       	rjmp	.+4      	; 0xdaa <malloc+0x124>
     da6:	e0 e0       	ldi	r30, 0x00	; 0
     da8:	f0 e0       	ldi	r31, 0x00	; 0
     daa:	cf 01       	movw	r24, r30
     dac:	df 91       	pop	r29
     dae:	cf 91       	pop	r28
     db0:	1f 91       	pop	r17
     db2:	0f 91       	pop	r16
     db4:	08 95       	ret

00000db6 <free>:
     db6:	cf 93       	push	r28
     db8:	df 93       	push	r29
     dba:	00 97       	sbiw	r24, 0x00	; 0
     dbc:	09 f4       	brne	.+2      	; 0xdc0 <free+0xa>
     dbe:	81 c0       	rjmp	.+258    	; 0xec2 <free+0x10c>
     dc0:	fc 01       	movw	r30, r24
     dc2:	32 97       	sbiw	r30, 0x02	; 2
     dc4:	13 82       	std	Z+3, r1	; 0x03
     dc6:	12 82       	std	Z+2, r1	; 0x02
     dc8:	a0 91 ae 02 	lds	r26, 0x02AE	; 0x8002ae <__flp>
     dcc:	b0 91 af 02 	lds	r27, 0x02AF	; 0x8002af <__flp+0x1>
     dd0:	10 97       	sbiw	r26, 0x00	; 0
     dd2:	81 f4       	brne	.+32     	; 0xdf4 <free+0x3e>
     dd4:	20 81       	ld	r18, Z
     dd6:	31 81       	ldd	r19, Z+1	; 0x01
     dd8:	82 0f       	add	r24, r18
     dda:	93 1f       	adc	r25, r19
     ddc:	20 91 ac 02 	lds	r18, 0x02AC	; 0x8002ac <__brkval>
     de0:	30 91 ad 02 	lds	r19, 0x02AD	; 0x8002ad <__brkval+0x1>
     de4:	28 17       	cp	r18, r24
     de6:	39 07       	cpc	r19, r25
     de8:	51 f5       	brne	.+84     	; 0xe3e <free+0x88>
     dea:	f0 93 ad 02 	sts	0x02AD, r31	; 0x8002ad <__brkval+0x1>
     dee:	e0 93 ac 02 	sts	0x02AC, r30	; 0x8002ac <__brkval>
     df2:	67 c0       	rjmp	.+206    	; 0xec2 <free+0x10c>
     df4:	ed 01       	movw	r28, r26
     df6:	20 e0       	ldi	r18, 0x00	; 0
     df8:	30 e0       	ldi	r19, 0x00	; 0
     dfa:	ce 17       	cp	r28, r30
     dfc:	df 07       	cpc	r29, r31
     dfe:	40 f4       	brcc	.+16     	; 0xe10 <free+0x5a>
     e00:	4a 81       	ldd	r20, Y+2	; 0x02
     e02:	5b 81       	ldd	r21, Y+3	; 0x03
     e04:	9e 01       	movw	r18, r28
     e06:	41 15       	cp	r20, r1
     e08:	51 05       	cpc	r21, r1
     e0a:	f1 f0       	breq	.+60     	; 0xe48 <free+0x92>
     e0c:	ea 01       	movw	r28, r20
     e0e:	f5 cf       	rjmp	.-22     	; 0xdfa <free+0x44>
     e10:	d3 83       	std	Z+3, r29	; 0x03
     e12:	c2 83       	std	Z+2, r28	; 0x02
     e14:	40 81       	ld	r20, Z
     e16:	51 81       	ldd	r21, Z+1	; 0x01
     e18:	84 0f       	add	r24, r20
     e1a:	95 1f       	adc	r25, r21
     e1c:	c8 17       	cp	r28, r24
     e1e:	d9 07       	cpc	r29, r25
     e20:	59 f4       	brne	.+22     	; 0xe38 <free+0x82>
     e22:	88 81       	ld	r24, Y
     e24:	99 81       	ldd	r25, Y+1	; 0x01
     e26:	84 0f       	add	r24, r20
     e28:	95 1f       	adc	r25, r21
     e2a:	02 96       	adiw	r24, 0x02	; 2
     e2c:	91 83       	std	Z+1, r25	; 0x01
     e2e:	80 83       	st	Z, r24
     e30:	8a 81       	ldd	r24, Y+2	; 0x02
     e32:	9b 81       	ldd	r25, Y+3	; 0x03
     e34:	93 83       	std	Z+3, r25	; 0x03
     e36:	82 83       	std	Z+2, r24	; 0x02
     e38:	21 15       	cp	r18, r1
     e3a:	31 05       	cpc	r19, r1
     e3c:	29 f4       	brne	.+10     	; 0xe48 <free+0x92>
     e3e:	f0 93 af 02 	sts	0x02AF, r31	; 0x8002af <__flp+0x1>
     e42:	e0 93 ae 02 	sts	0x02AE, r30	; 0x8002ae <__flp>
     e46:	3d c0       	rjmp	.+122    	; 0xec2 <free+0x10c>
     e48:	e9 01       	movw	r28, r18
     e4a:	fb 83       	std	Y+3, r31	; 0x03
     e4c:	ea 83       	std	Y+2, r30	; 0x02
     e4e:	49 91       	ld	r20, Y+
     e50:	59 91       	ld	r21, Y+
     e52:	c4 0f       	add	r28, r20
     e54:	d5 1f       	adc	r29, r21
     e56:	ec 17       	cp	r30, r28
     e58:	fd 07       	cpc	r31, r29
     e5a:	61 f4       	brne	.+24     	; 0xe74 <free+0xbe>
     e5c:	80 81       	ld	r24, Z
     e5e:	91 81       	ldd	r25, Z+1	; 0x01
     e60:	84 0f       	add	r24, r20
     e62:	95 1f       	adc	r25, r21
     e64:	02 96       	adiw	r24, 0x02	; 2
     e66:	e9 01       	movw	r28, r18
     e68:	99 83       	std	Y+1, r25	; 0x01
     e6a:	88 83       	st	Y, r24
     e6c:	82 81       	ldd	r24, Z+2	; 0x02
     e6e:	93 81       	ldd	r25, Z+3	; 0x03
     e70:	9b 83       	std	Y+3, r25	; 0x03
     e72:	8a 83       	std	Y+2, r24	; 0x02
     e74:	e0 e0       	ldi	r30, 0x00	; 0
     e76:	f0 e0       	ldi	r31, 0x00	; 0
     e78:	12 96       	adiw	r26, 0x02	; 2
     e7a:	8d 91       	ld	r24, X+
     e7c:	9c 91       	ld	r25, X
     e7e:	13 97       	sbiw	r26, 0x03	; 3
     e80:	00 97       	sbiw	r24, 0x00	; 0
     e82:	19 f0       	breq	.+6      	; 0xe8a <free+0xd4>
     e84:	fd 01       	movw	r30, r26
     e86:	dc 01       	movw	r26, r24
     e88:	f7 cf       	rjmp	.-18     	; 0xe78 <free+0xc2>
     e8a:	8d 91       	ld	r24, X+
     e8c:	9c 91       	ld	r25, X
     e8e:	11 97       	sbiw	r26, 0x01	; 1
     e90:	9d 01       	movw	r18, r26
     e92:	2e 5f       	subi	r18, 0xFE	; 254
     e94:	3f 4f       	sbci	r19, 0xFF	; 255
     e96:	82 0f       	add	r24, r18
     e98:	93 1f       	adc	r25, r19
     e9a:	20 91 ac 02 	lds	r18, 0x02AC	; 0x8002ac <__brkval>
     e9e:	30 91 ad 02 	lds	r19, 0x02AD	; 0x8002ad <__brkval+0x1>
     ea2:	28 17       	cp	r18, r24
     ea4:	39 07       	cpc	r19, r25
     ea6:	69 f4       	brne	.+26     	; 0xec2 <free+0x10c>
     ea8:	30 97       	sbiw	r30, 0x00	; 0
     eaa:	29 f4       	brne	.+10     	; 0xeb6 <free+0x100>
     eac:	10 92 af 02 	sts	0x02AF, r1	; 0x8002af <__flp+0x1>
     eb0:	10 92 ae 02 	sts	0x02AE, r1	; 0x8002ae <__flp>
     eb4:	02 c0       	rjmp	.+4      	; 0xeba <free+0x104>
     eb6:	13 82       	std	Z+3, r1	; 0x03
     eb8:	12 82       	std	Z+2, r1	; 0x02
     eba:	b0 93 ad 02 	sts	0x02AD, r27	; 0x8002ad <__brkval+0x1>
     ebe:	a0 93 ac 02 	sts	0x02AC, r26	; 0x8002ac <__brkval>
     ec2:	df 91       	pop	r29
     ec4:	cf 91       	pop	r28
     ec6:	08 95       	ret

00000ec8 <strnlen_P>:
     ec8:	fc 01       	movw	r30, r24
     eca:	05 90       	lpm	r0, Z+
     ecc:	61 50       	subi	r22, 0x01	; 1
     ece:	70 40       	sbci	r23, 0x00	; 0
     ed0:	01 10       	cpse	r0, r1
     ed2:	d8 f7       	brcc	.-10     	; 0xeca <strnlen_P+0x2>
     ed4:	80 95       	com	r24
     ed6:	90 95       	com	r25
     ed8:	8e 0f       	add	r24, r30
     eda:	9f 1f       	adc	r25, r31
     edc:	08 95       	ret

00000ede <memset>:
     ede:	dc 01       	movw	r26, r24
     ee0:	01 c0       	rjmp	.+2      	; 0xee4 <memset+0x6>
     ee2:	6d 93       	st	X+, r22
     ee4:	41 50       	subi	r20, 0x01	; 1
     ee6:	50 40       	sbci	r21, 0x00	; 0
     ee8:	e0 f7       	brcc	.-8      	; 0xee2 <memset+0x4>
     eea:	08 95       	ret

00000eec <strnlen>:
     eec:	fc 01       	movw	r30, r24
     eee:	61 50       	subi	r22, 0x01	; 1
     ef0:	70 40       	sbci	r23, 0x00	; 0
     ef2:	01 90       	ld	r0, Z+
     ef4:	01 10       	cpse	r0, r1
     ef6:	d8 f7       	brcc	.-10     	; 0xeee <strnlen+0x2>
     ef8:	80 95       	com	r24
     efa:	90 95       	com	r25
     efc:	8e 0f       	add	r24, r30
     efe:	9f 1f       	adc	r25, r31
     f00:	08 95       	ret

00000f02 <fputc>:
     f02:	0f 93       	push	r16
     f04:	1f 93       	push	r17
     f06:	cf 93       	push	r28
     f08:	df 93       	push	r29
     f0a:	fb 01       	movw	r30, r22
     f0c:	23 81       	ldd	r18, Z+3	; 0x03
     f0e:	21 fd       	sbrc	r18, 1
     f10:	03 c0       	rjmp	.+6      	; 0xf18 <fputc+0x16>
     f12:	8f ef       	ldi	r24, 0xFF	; 255
     f14:	9f ef       	ldi	r25, 0xFF	; 255
     f16:	2c c0       	rjmp	.+88     	; 0xf70 <fputc+0x6e>
     f18:	22 ff       	sbrs	r18, 2
     f1a:	16 c0       	rjmp	.+44     	; 0xf48 <fputc+0x46>
     f1c:	46 81       	ldd	r20, Z+6	; 0x06
     f1e:	57 81       	ldd	r21, Z+7	; 0x07
     f20:	24 81       	ldd	r18, Z+4	; 0x04
     f22:	35 81       	ldd	r19, Z+5	; 0x05
     f24:	42 17       	cp	r20, r18
     f26:	53 07       	cpc	r21, r19
     f28:	44 f4       	brge	.+16     	; 0xf3a <fputc+0x38>
     f2a:	a0 81       	ld	r26, Z
     f2c:	b1 81       	ldd	r27, Z+1	; 0x01
     f2e:	9d 01       	movw	r18, r26
     f30:	2f 5f       	subi	r18, 0xFF	; 255
     f32:	3f 4f       	sbci	r19, 0xFF	; 255
     f34:	31 83       	std	Z+1, r19	; 0x01
     f36:	20 83       	st	Z, r18
     f38:	8c 93       	st	X, r24
     f3a:	26 81       	ldd	r18, Z+6	; 0x06
     f3c:	37 81       	ldd	r19, Z+7	; 0x07
     f3e:	2f 5f       	subi	r18, 0xFF	; 255
     f40:	3f 4f       	sbci	r19, 0xFF	; 255
     f42:	37 83       	std	Z+7, r19	; 0x07
     f44:	26 83       	std	Z+6, r18	; 0x06
     f46:	14 c0       	rjmp	.+40     	; 0xf70 <fputc+0x6e>
     f48:	8b 01       	movw	r16, r22
     f4a:	ec 01       	movw	r28, r24
     f4c:	fb 01       	movw	r30, r22
     f4e:	00 84       	ldd	r0, Z+8	; 0x08
     f50:	f1 85       	ldd	r31, Z+9	; 0x09
     f52:	e0 2d       	mov	r30, r0
     f54:	19 95       	eicall
     f56:	89 2b       	or	r24, r25
     f58:	e1 f6       	brne	.-72     	; 0xf12 <fputc+0x10>
     f5a:	d8 01       	movw	r26, r16
     f5c:	16 96       	adiw	r26, 0x06	; 6
     f5e:	8d 91       	ld	r24, X+
     f60:	9c 91       	ld	r25, X
     f62:	17 97       	sbiw	r26, 0x07	; 7
     f64:	01 96       	adiw	r24, 0x01	; 1
     f66:	17 96       	adiw	r26, 0x07	; 7
     f68:	9c 93       	st	X, r25
     f6a:	8e 93       	st	-X, r24
     f6c:	16 97       	sbiw	r26, 0x06	; 6
     f6e:	ce 01       	movw	r24, r28
     f70:	df 91       	pop	r29
     f72:	cf 91       	pop	r28
     f74:	1f 91       	pop	r17
     f76:	0f 91       	pop	r16
     f78:	08 95       	ret

00000f7a <__ultoa_invert>:
     f7a:	fa 01       	movw	r30, r20
     f7c:	aa 27       	eor	r26, r26
     f7e:	28 30       	cpi	r18, 0x08	; 8
     f80:	51 f1       	breq	.+84     	; 0xfd6 <__ultoa_invert+0x5c>
     f82:	20 31       	cpi	r18, 0x10	; 16
     f84:	81 f1       	breq	.+96     	; 0xfe6 <__ultoa_invert+0x6c>
     f86:	e8 94       	clt
     f88:	6f 93       	push	r22
     f8a:	6e 7f       	andi	r22, 0xFE	; 254
     f8c:	6e 5f       	subi	r22, 0xFE	; 254
     f8e:	7f 4f       	sbci	r23, 0xFF	; 255
     f90:	8f 4f       	sbci	r24, 0xFF	; 255
     f92:	9f 4f       	sbci	r25, 0xFF	; 255
     f94:	af 4f       	sbci	r26, 0xFF	; 255
     f96:	b1 e0       	ldi	r27, 0x01	; 1
     f98:	3e d0       	rcall	.+124    	; 0x1016 <__ultoa_invert+0x9c>
     f9a:	b4 e0       	ldi	r27, 0x04	; 4
     f9c:	3c d0       	rcall	.+120    	; 0x1016 <__ultoa_invert+0x9c>
     f9e:	67 0f       	add	r22, r23
     fa0:	78 1f       	adc	r23, r24
     fa2:	89 1f       	adc	r24, r25
     fa4:	9a 1f       	adc	r25, r26
     fa6:	a1 1d       	adc	r26, r1
     fa8:	68 0f       	add	r22, r24
     faa:	79 1f       	adc	r23, r25
     fac:	8a 1f       	adc	r24, r26
     fae:	91 1d       	adc	r25, r1
     fb0:	a1 1d       	adc	r26, r1
     fb2:	6a 0f       	add	r22, r26
     fb4:	71 1d       	adc	r23, r1
     fb6:	81 1d       	adc	r24, r1
     fb8:	91 1d       	adc	r25, r1
     fba:	a1 1d       	adc	r26, r1
     fbc:	20 d0       	rcall	.+64     	; 0xffe <__ultoa_invert+0x84>
     fbe:	09 f4       	brne	.+2      	; 0xfc2 <__ultoa_invert+0x48>
     fc0:	68 94       	set
     fc2:	3f 91       	pop	r19
     fc4:	2a e0       	ldi	r18, 0x0A	; 10
     fc6:	26 9f       	mul	r18, r22
     fc8:	11 24       	eor	r1, r1
     fca:	30 19       	sub	r19, r0
     fcc:	30 5d       	subi	r19, 0xD0	; 208
     fce:	31 93       	st	Z+, r19
     fd0:	de f6       	brtc	.-74     	; 0xf88 <__ultoa_invert+0xe>
     fd2:	cf 01       	movw	r24, r30
     fd4:	08 95       	ret
     fd6:	46 2f       	mov	r20, r22
     fd8:	47 70       	andi	r20, 0x07	; 7
     fda:	40 5d       	subi	r20, 0xD0	; 208
     fdc:	41 93       	st	Z+, r20
     fde:	b3 e0       	ldi	r27, 0x03	; 3
     fe0:	0f d0       	rcall	.+30     	; 0x1000 <__ultoa_invert+0x86>
     fe2:	c9 f7       	brne	.-14     	; 0xfd6 <__ultoa_invert+0x5c>
     fe4:	f6 cf       	rjmp	.-20     	; 0xfd2 <__ultoa_invert+0x58>
     fe6:	46 2f       	mov	r20, r22
     fe8:	4f 70       	andi	r20, 0x0F	; 15
     fea:	40 5d       	subi	r20, 0xD0	; 208
     fec:	4a 33       	cpi	r20, 0x3A	; 58
     fee:	18 f0       	brcs	.+6      	; 0xff6 <__ultoa_invert+0x7c>
     ff0:	49 5d       	subi	r20, 0xD9	; 217
     ff2:	31 fd       	sbrc	r19, 1
     ff4:	40 52       	subi	r20, 0x20	; 32
     ff6:	41 93       	st	Z+, r20
     ff8:	02 d0       	rcall	.+4      	; 0xffe <__ultoa_invert+0x84>
     ffa:	a9 f7       	brne	.-22     	; 0xfe6 <__ultoa_invert+0x6c>
     ffc:	ea cf       	rjmp	.-44     	; 0xfd2 <__ultoa_invert+0x58>
     ffe:	b4 e0       	ldi	r27, 0x04	; 4
    1000:	a6 95       	lsr	r26
    1002:	97 95       	ror	r25
    1004:	87 95       	ror	r24
    1006:	77 95       	ror	r23
    1008:	67 95       	ror	r22
    100a:	ba 95       	dec	r27
    100c:	c9 f7       	brne	.-14     	; 0x1000 <__ultoa_invert+0x86>
    100e:	00 97       	sbiw	r24, 0x00	; 0
    1010:	61 05       	cpc	r22, r1
    1012:	71 05       	cpc	r23, r1
    1014:	08 95       	ret
    1016:	9b 01       	movw	r18, r22
    1018:	ac 01       	movw	r20, r24
    101a:	0a 2e       	mov	r0, r26
    101c:	06 94       	lsr	r0
    101e:	57 95       	ror	r21
    1020:	47 95       	ror	r20
    1022:	37 95       	ror	r19
    1024:	27 95       	ror	r18
    1026:	ba 95       	dec	r27
    1028:	c9 f7       	brne	.-14     	; 0x101c <__ultoa_invert+0xa2>
    102a:	62 0f       	add	r22, r18
    102c:	73 1f       	adc	r23, r19
    102e:	84 1f       	adc	r24, r20
    1030:	95 1f       	adc	r25, r21
    1032:	a0 1d       	adc	r26, r0
    1034:	08 95       	ret

00001036 <_exit>:
    1036:	f8 94       	cli

00001038 <__stop_program>:
    1038:	ff cf       	rjmp	.-2      	; 0x1038 <__stop_program>
